diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/enterprise-contract/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/enterprise-contract/kustomize.out.yaml
4d3
<   annotations: {}
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/has/staging/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/has/staging/kustomize.out.yaml
907a908
>   creationTimestamp: null
956a958
>   creationTimestamp: null
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/integration/staging/stone-stage-p01/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/integration/staging/stone-stage-p01/kustomize.out.yaml
13a14
>   creationTimestamp: null
1554a1556
>   creationTimestamp: null
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/kubearchive/staging/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/kubearchive/staging/kustomize.out.yaml
544c544
<   DATABASE_KIND: cG9zdGdyZXNxbA==
---
>   DATABASE_KIND: cG9zdGdyZXNxbA== 
902a903
>         DATABASE_PASSWORD: '{{ index . "db.password" }}'
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/pipeline-service/staging/stone-stage-p01/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/pipeline-service/staging/stone-stage-p01/kustomize.out.yaml
1039a1040
>     DB_PASSWORD=
1464a1466
>         - name: DB_PASSWORD
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/pipeline-service/staging/stone-stg-rh01/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/pipeline-service/staging/stone-stg-rh01/kustomize.out.yaml
1039a1040
>     DB_PASSWORD=
1464a1466
>         - name: DB_PASSWORD
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/quality-dashboard/staging/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/quality-dashboard/staging/kustomize.out.yaml
147a148
>         - name: POSTGRES_ENT_PASSWORD
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/repository-validator/staging/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/repository-validator/staging/kustomize.out.yaml
1,351d0
< apiVersion: v1
< kind: Namespace
< metadata:
<   labels:
<     app.kubernetes.io/component: manager
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: system
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: namespace
<     app.kubernetes.io/part-of: repository-validator
<     control-plane: controller-manager
<   name: repository-validator
< ---
< apiVersion: v1
< kind: ServiceAccount
< metadata:
<   labels:
<     app.kubernetes.io/component: rbac
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: controller-manager-sa
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: serviceaccount
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-controller-manager
<   namespace: repository-validator
< ---
< apiVersion: rbac.authorization.k8s.io/v1
< kind: Role
< metadata:
<   labels:
<     app.kubernetes.io/component: rbac
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: leader-election-role
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: role
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-leader-election-role
<   namespace: repository-validator
< rules:
< - apiGroups:
<   - ""
<   resources:
<   - configmaps
<   verbs:
<   - get
<   - list
<   - watch
<   - create
<   - update
<   - patch
<   - delete
< - apiGroups:
<   - coordination.k8s.io
<   resources:
<   - leases
<   verbs:
<   - get
<   - list
<   - watch
<   - create
<   - update
<   - patch
<   - delete
< - apiGroups:
<   - ""
<   resources:
<   - events
<   verbs:
<   - create
<   - patch
< ---
< apiVersion: rbac.authorization.k8s.io/v1
< kind: ClusterRole
< metadata:
<   labels:
<     app.kubernetes.io/component: kube-rbac-proxy
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: metrics-reader
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: clusterrole
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-metrics-reader
< rules:
< - nonResourceURLs:
<   - /metrics
<   verbs:
<   - get
< ---
< apiVersion: rbac.authorization.k8s.io/v1
< kind: ClusterRole
< metadata:
<   labels:
<     app.kubernetes.io/component: kube-rbac-proxy
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: proxy-role
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: clusterrole
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-proxy-role
< rules:
< - apiGroups:
<   - authentication.k8s.io
<   resources:
<   - tokenreviews
<   verbs:
<   - create
< - apiGroups:
<   - authorization.k8s.io
<   resources:
<   - subjectaccessreviews
<   verbs:
<   - create
< ---
< apiVersion: rbac.authorization.k8s.io/v1
< kind: RoleBinding
< metadata:
<   labels:
<     app.kubernetes.io/component: rbac
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: leader-election-rolebinding
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: rolebinding
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-leader-election-rolebinding
<   namespace: repository-validator
< roleRef:
<   apiGroup: rbac.authorization.k8s.io
<   kind: Role
<   name: repository-validator-leader-election-role
< subjects:
< - kind: ServiceAccount
<   name: repository-validator-controller-manager
<   namespace: repository-validator
< ---
< apiVersion: rbac.authorization.k8s.io/v1
< kind: ClusterRoleBinding
< metadata:
<   labels:
<     app.kubernetes.io/component: kube-rbac-proxy
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: proxy-rolebinding
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: clusterrolebinding
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-proxy-rolebinding
< roleRef:
<   apiGroup: rbac.authorization.k8s.io
<   kind: ClusterRole
<   name: repository-validator-proxy-role
< subjects:
< - kind: ServiceAccount
<   name: repository-validator-controller-manager
<   namespace: repository-validator
< ---
< apiVersion: v1
< data:
<   config.json: |
<     [
<         "https://gitlab.cee.redhat.com",
<         "https://gitlab.corp.redhat.com",
<         "https://gitlab.com/redhat",
<         "https://github.com/openshift-priv",
<         "https://github.com/redhat-appstudio/tekton-tools"
<     ]
< kind: ConfigMap
< metadata:
<   name: config-kf5cfkbhdc
<   namespace: repository-validator
< ---
< apiVersion: v1
< kind: Service
< metadata:
<   labels:
<     app.kubernetes.io/component: kube-rbac-proxy
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: controller-manager-metrics-service
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: service
<     app.kubernetes.io/part-of: repository-validator
<     control-plane: controller-manager
<   name: repository-validator-controller-manager-metrics-service
<   namespace: repository-validator
< spec:
<   ports:
<   - name: https
<     port: 8443
<     protocol: TCP
<     targetPort: https
<   selector:
<     control-plane: controller-manager
< ---
< apiVersion: v1
< kind: Service
< metadata:
<   annotations:
<     service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
<   labels:
<     app.kubernetes.io/component: webhook
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: webhook-service
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: service
<     app.kubernetes.io/part-of: repository-validator
<   name: repository-validator-webhook-service
<   namespace: repository-validator
< spec:
<   ports:
<   - port: 443
<     protocol: TCP
<     targetPort: 9443
<   selector:
<     control-plane: controller-manager
< ---
< apiVersion: apps/v1
< kind: Deployment
< metadata:
<   labels:
<     app.kubernetes.io/component: manager
<     app.kubernetes.io/created-by: repository-validator
<     app.kubernetes.io/instance: controller-manager
<     app.kubernetes.io/managed-by: kustomize
<     app.kubernetes.io/name: deployment
<     app.kubernetes.io/part-of: repository-validator
<     control-plane: controller-manager
<   name: repository-validator-controller-manager
<   namespace: repository-validator
< spec:
<   replicas: 1
<   selector:
<     matchLabels:
<       control-plane: controller-manager
<   template:
<     metadata:
<       annotations:
<         kubectl.kubernetes.io/default-container: manager
<       labels:
<         control-plane: controller-manager
<     spec:
<       containers:
<       - args:
<         - --health-probe-bind-address=:8081
<         - --metrics-bind-address=127.0.0.1:8080
<         - --leader-elect
<         - --url-prefix-allow-list=/mnt/config.json
<         command:
<         - /manager
<         image: quay.io/redhat-user-workloads/konflux-infra-tenant/repository-validator/repository-validator:1ee871c402fb8ee80040fca20d2b4fd14ed97c0d
<         livenessProbe:
<           httpGet:
<             path: /healthz
<             port: 8081
<           initialDelaySeconds: 15
<           periodSeconds: 20
<         name: manager
<         ports:
<         - containerPort: 9443
<           name: webhook-server
<           protocol: TCP
<         readinessProbe:
<           httpGet:
<             path: /readyz
<             port: 8081
<           initialDelaySeconds: 5
<           periodSeconds: 10
<         resources:
<           limits:
<             cpu: 500m
<             memory: 128Mi
<           requests:
<             cpu: 10m
<             memory: 64Mi
<         securityContext:
<           allowPrivilegeEscalation: false
<           capabilities:
<             drop:
<             - ALL
<           readOnlyRootFilesystem: true
<         volumeMounts:
<         - mountPath: /tmp/k8s-webhook-server/serving-certs
<           name: cert
<           readOnly: true
<         - mountPath: /mnt
<           name: config
<           readOnly: true
<       - args:
<         - --secure-listen-address=0.0.0.0:8443
<         - --upstream=http://127.0.0.1:8080/
<         - --logtostderr=true
<         - --v=0
<         image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
<         name: kube-rbac-proxy
<         ports:
<         - containerPort: 8443
<           name: https
<           protocol: TCP
<         resources:
<           limits:
<             cpu: 500m
<             memory: 128Mi
<           requests:
<             cpu: 5m
<             memory: 64Mi
<         securityContext:
<           allowPrivilegeEscalation: false
<           capabilities:
<             drop:
<             - ALL
<           readOnlyRootFilesystem: true
<       securityContext:
<         runAsNonRoot: true
<       serviceAccountName: repository-validator-controller-manager
<       terminationGracePeriodSeconds: 10
<       volumes:
<       - name: cert
<         secret:
<           defaultMode: 420
<           secretName: webhook-server-cert
<       - configMap:
<           items:
<           - key: config.json
<             path: config.json
<           name: config-kf5cfkbhdc
<         name: config
< ---
< apiVersion: admissionregistration.k8s.io/v1
< kind: ValidatingWebhookConfiguration
< metadata:
<   annotations:
<     service.beta.openshift.io/inject-cabundle: "true"
<   name: repository-validator-validating-webhook-configuration
< webhooks:
< - admissionReviewVersions:
<   - v1
<   clientConfig:
<     service:
<       name: repository-validator-webhook-service
<       namespace: repository-validator
<       path: /validate-pipelinesascode-tekton-dev-v1alpha1-repository
<   failurePolicy: Fail
<   name: vrepository.kb.io
<   rules:
<   - apiGroups:
<     - pipelinesascode.tekton.dev
<     apiVersions:
<     - v1alpha1
<     operations:
<     - CREATE
<     - UPDATE
<     resources:
<     - repositories
<   sideEffects: None
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/workspaces/staging/stone-stage-p01/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/workspaces/staging/stone-stage-p01/kustomize.out.yaml
0a1,1116
> apiVersion: v1
> kind: Namespace
> metadata:
>   labels:
>     app.kubernetes.io/component: manager
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: system
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: namespace
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-system
> ---
> apiVersion: apiextensions.k8s.io/v1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.14.0
>   name: internalworkspaces.workspaces.konflux-ci.dev
> spec:
>   group: workspaces.konflux-ci.dev
>   names:
>     kind: InternalWorkspace
>     listKind: InternalWorkspaceList
>     plural: internalworkspaces
>     singular: internalworkspace
>   scope: Namespaced
>   versions:
>   - additionalPrinterColumns:
>     - jsonPath: .spec.visibility
>       name: Visibility
>       type: string
>     name: v1alpha1
>     schema:
>       openAPIV3Schema:
>         description: InternalWorkspace is the Schema for the workspaces API
>         properties:
>           apiVersion:
>             description: |-
>               APIVersion defines the versioned schema of this representation of an object.
>               Servers should convert recognized schemas to the latest internal value, and
>               may reject unrecognized values.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
>             type: string
>           kind:
>             description: |-
>               Kind is a string value representing the REST resource this object represents.
>               Servers may infer this from the endpoint the client submits requests to.
>               Cannot be updated.
>               In CamelCase.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
>             type: string
>           metadata:
>             type: object
>           spec:
>             description: InternalWorkspaceSpec defines the desired state of Workspace
>             properties:
>               displayName:
>                 type: string
>               owner:
>                 description: UserInfo contains information about a user identity
>                 properties:
>                   jwtInfo:
>                     description: JwtInfo contains information extracted from the user
>                       JWT Token
>                     properties:
>                       email:
>                         type: string
>                       sub:
>                         type: string
>                       userId:
>                         type: string
>                     required:
>                     - email
>                     - sub
>                     - userId
>                     type: object
>                 required:
>                 - jwtInfo
>                 type: object
>               visibility:
>                 enum:
>                 - community
>                 - private
>                 type: string
>             required:
>             - displayName
>             - owner
>             - visibility
>             type: object
>           status:
>             description: InternalWorkspaceStatus defines the observed state of Workspace
>             properties:
>               conditions:
>                 items:
>                   description: "Condition contains details for one aspect of the current
>                     state of this API Resource.\n---\nThis struct is intended for
>                     direct use as an array at the field path .status.conditions.  For
>                     example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
>                     observations of a foo's current state.\n\t    // Known .status.conditions.type
>                     are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
>                     +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
>                     \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
>                     patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
>                     \   // other fields\n\t}"
>                   properties:
>                     lastTransitionTime:
>                       description: |-
>                         lastTransitionTime is the last time the condition transitioned from one status to another.
>                         This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
>                       format: date-time
>                       type: string
>                     message:
>                       description: |-
>                         message is a human readable message indicating details about the transition.
>                         This may be an empty string.
>                       maxLength: 32768
>                       type: string
>                     observedGeneration:
>                       description: |-
>                         observedGeneration represents the .metadata.generation that the condition was set based upon.
>                         For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
>                         with respect to the current state of the instance.
>                       format: int64
>                       minimum: 0
>                       type: integer
>                     reason:
>                       description: |-
>                         reason contains a programmatic identifier indicating the reason for the condition's last transition.
>                         Producers of specific condition types may define expected values and meanings for this field,
>                         and whether the values are considered a guaranteed API.
>                         The value should be a CamelCase string.
>                         This field may not be empty.
>                       maxLength: 1024
>                       minLength: 1
>                       pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
>                       type: string
>                     status:
>                       description: status of the condition, one of True, False, Unknown.
>                       enum:
>                       - "True"
>                       - "False"
>                       - Unknown
>                       type: string
>                     type:
>                       description: |-
>                         type of condition in CamelCase or in foo.example.com/CamelCase.
>                         ---
>                         Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
>                         useful (see .node.status.conditions), the ability to deconflict is important.
>                         The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
>                       maxLength: 316
>                       pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
>                       type: string
>                   required:
>                   - lastTransitionTime
>                   - message
>                   - reason
>                   - status
>                   - type
>                   type: object
>                 type: array
>               owner:
>                 description: Owner contains information on the owner
>                 properties:
>                   username:
>                     type: string
>                 type: object
>               space:
>                 description: Space contains information about the underlying Space
>                 properties:
>                   isHome:
>                     type: boolean
>                   name:
>                     type: string
>                   targetCluster:
>                     description: TargetCluster contains the URL to the cluster where
>                       the workspace's namespaces live
>                     type: string
>                 required:
>                 - isHome
>                 - name
>                 type: object
>             type: object
>         type: object
>     served: true
>     storage: true
>     subresources:
>       status: {}
> ---
> apiVersion: apiextensions.k8s.io/v1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.14.0
>   name: workspaces.workspaces.konflux-ci.dev
> spec:
>   group: workspaces.konflux-ci.dev
>   names:
>     kind: Workspace
>     listKind: WorkspaceList
>     plural: workspaces
>     singular: workspace
>   scope: Namespaced
>   versions:
>   - additionalPrinterColumns:
>     - jsonPath: .spec.visibility
>       name: Visibility
>       type: string
>     name: v1alpha1
>     schema:
>       openAPIV3Schema:
>         description: Workspace is the Schema for the workspaces API
>         properties:
>           apiVersion:
>             description: |-
>               APIVersion defines the versioned schema of this representation of an object.
>               Servers should convert recognized schemas to the latest internal value, and
>               may reject unrecognized values.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
>             type: string
>           kind:
>             description: |-
>               Kind is a string value representing the REST resource this object represents.
>               Servers may infer this from the endpoint the client submits requests to.
>               Cannot be updated.
>               In CamelCase.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
>             type: string
>           metadata:
>             type: object
>           spec:
>             description: WorkspaceSpec defines the desired state of Workspace
>             properties:
>               visibility:
>                 enum:
>                 - community
>                 - private
>                 type: string
>             required:
>             - visibility
>             type: object
>           status:
>             description: WorkspaceStatus defines the observed state of Workspace
>             properties:
>               conditions:
>                 items:
>                   description: "Condition contains details for one aspect of the current
>                     state of this API Resource.\n---\nThis struct is intended for
>                     direct use as an array at the field path .status.conditions.  For
>                     example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
>                     observations of a foo's current state.\n\t    // Known .status.conditions.type
>                     are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
>                     +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
>                     \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
>                     patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
>                     \   // other fields\n\t}"
>                   properties:
>                     lastTransitionTime:
>                       description: |-
>                         lastTransitionTime is the last time the condition transitioned from one status to another.
>                         This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
>                       format: date-time
>                       type: string
>                     message:
>                       description: |-
>                         message is a human readable message indicating details about the transition.
>                         This may be an empty string.
>                       maxLength: 32768
>                       type: string
>                     observedGeneration:
>                       description: |-
>                         observedGeneration represents the .metadata.generation that the condition was set based upon.
>                         For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
>                         with respect to the current state of the instance.
>                       format: int64
>                       minimum: 0
>                       type: integer
>                     reason:
>                       description: |-
>                         reason contains a programmatic identifier indicating the reason for the condition's last transition.
>                         Producers of specific condition types may define expected values and meanings for this field,
>                         and whether the values are considered a guaranteed API.
>                         The value should be a CamelCase string.
>                         This field may not be empty.
>                       maxLength: 1024
>                       minLength: 1
>                       pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
>                       type: string
>                     status:
>                       description: status of the condition, one of True, False, Unknown.
>                       enum:
>                       - "True"
>                       - "False"
>                       - Unknown
>                       type: string
>                     type:
>                       description: |-
>                         type of condition in CamelCase or in foo.example.com/CamelCase.
>                         ---
>                         Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
>                         useful (see .node.status.conditions), the ability to deconflict is important.
>                         The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
>                       maxLength: 316
>                       pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
>                       type: string
>                   required:
>                   - lastTransitionTime
>                   - message
>                   - reason
>                   - status
>                   - type
>                   type: object
>                 type: array
>               owner:
>                 description: UserInfoStatus User info stored in the status
>                 properties:
>                   email:
>                     type: string
>                 required:
>                 - email
>                 type: object
>               space:
>                 description: SpaceInfo Information about a Space
>                 properties:
>                   name:
>                     type: string
>                   targetCluster:
>                     description: TargetCluster contains the URL to the cluster where
>                       the workspace's namespaces live
>                     type: string
>                 required:
>                 - name
>                 type: object
>             type: object
>         type: object
>     served: true
>     storage: true
>     subresources:
>       status: {}
> ---
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: serviceaccount
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: workspaces-metrics-reader
>   namespace: workspaces-system
> ---
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-spacebinding-reader
>   namespace: toolchain-host-operator
> rules:
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - spacebindings
>   verbs:
>   - list
>   - get
>   - watch
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-usersignup-reader
>   namespace: toolchain-host-operator
> rules:
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - usersignups
>   verbs:
>   - list
>   - get
>   - watch
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: leader-election-role
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: role
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-leader-election-role
>   namespace: workspaces-system
> rules:
> - apiGroups:
>   - ""
>   resources:
>   - configmaps
>   verbs:
>   - get
>   - list
>   - watch
>   - create
>   - update
>   - patch
>   - delete
> - apiGroups:
>   - coordination.k8s.io
>   resources:
>   - leases
>   verbs:
>   - get
>   - list
>   - watch
>   - create
>   - update
>   - patch
>   - delete
> - apiGroups:
>   - ""
>   resources:
>   - events
>   verbs:
>   - create
>   - patch
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-workspace-server-editor
>   namespace: workspaces-system
> rules:
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces
>   verbs:
>   - list
>   - get
>   - watch
>   - update
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-service-maintainer
> rules:
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - '*'
>   verbs:
>   - '*'
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   name: workspaces-manager-role
> rules:
> - apiGroups:
>   - rbac.authorization.k8s.io
>   resources:
>   - rolebindings
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - rbac.authorization.k8s.io
>   resources:
>   - roles
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - spacebindings
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - spaces
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - toolchainstatuses
>   verbs:
>   - get
>   - list
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - usersignups
>   verbs:
>   - get
>   - list
>   - watch
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces
>   verbs:
>   - create
>   - delete
>   - deletecollection
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces/finalizers
>   verbs:
>   - update
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces/status
>   verbs:
>   - get
>   - patch
>   - update
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   labels:
>     app.kubernetes.io/component: kube-rbac-proxy
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: metrics-reader
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrole
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-metrics-reader
> rules:
> - nonResourceURLs:
>   - /metrics
>   verbs:
>   - get
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   labels:
>     app.kubernetes.io/component: kube-rbac-proxy
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: proxy-role
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrole
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-proxy-role
> rules:
> - apiGroups:
>   - authentication.k8s.io
>   resources:
>   - tokenreviews
>   verbs:
>   - create
> - apiGroups:
>   - authorization.k8s.io
>   resources:
>   - subjectaccessreviews
>   verbs:
>   - create
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-rest-api-server:spacebinding-reader
>   namespace: toolchain-host-operator
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-spacebinding-reader
> subjects:
> - kind: ServiceAccount
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-rest-api-server:usersignup-reader
>   namespace: toolchain-host-operator
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-usersignup-reader
> subjects:
> - kind: ServiceAccount
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: leader-election-rolebinding
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: rolebinding
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-leader-election-rolebinding
>   namespace: workspaces-system
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-leader-election-role
> subjects:
> - kind: ServiceAccount
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-rest-api-server:workspace-server-editor
>   namespace: workspaces-system
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-workspace-server-editor
> subjects:
> - kind: ServiceAccount
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-service-maintainer
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-service-maintainer
> subjects:
> - apiGroup: rbac.authorization.k8s.io
>   kind: Group
>   name: konflux-core
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: manager-rolebinding
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrolebinding
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-manager-rolebinding
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: workspaces-manager-role
> subjects:
> - kind: ServiceAccount
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name: workspaces-metrics-reader
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: workspaces-metrics-reader
> subjects:
> - kind: ServiceAccount
>   name: workspaces-metrics-reader
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/component: kube-rbac-proxy
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: proxy-rolebinding
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrolebinding
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-proxy-rolebinding
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: workspaces-proxy-role
> subjects:
> - kind: ServiceAccount
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   kubesaw.namespace: toolchain-host-operator
> kind: ConfigMap
> metadata:
>   name: workspaces-operator-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   kubesaw.namespace: toolchain-host-operator
>   log.level: "-4"
> kind: ConfigMap
> metadata:
>   name: workspaces-rest-api-server-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   config.yaml: |
>     http:
>       services:
>         web:
>           loadBalancer:
>             servers:
>             - url: "http://localhost:8080/"
>       routers:
>         app-apis:
>           service: web
>           entrypoints:
>           - web
>           rule: PathPrefix(`/apis/workspaces.konflux-ci.dev`) && ( Method(`GET`) || Method(`PUT`) || Method(`PATCH`) )
>           middlewares:
>             - jwt-authorizer
>         app-healthz:
>           service: web
>           entrypoints:
>           - web
>           rule: Path(`/healthz`)
> 
>     # Middlewares
>       middlewares:
> 
>     # JWT Auth
>         jwt-authorizer:
>           plugin:
>             jwt:
>               payloadFields:
>               - sub
>               - exp
>               required: true
>               keys: []
>               jwtHeaders:
>                 X-Subject: sub
>               jwtSources:
>               - type: bearer
>                 key: Authorization
> kind: ConfigMap
> metadata:
>   name: workspaces-traefik-sidecar-dynamic-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   traefik.yaml: |
>     entryPoints:
>       web:
>         address: ":8000"
>       metrics:
>         address: ":8001"
>     providers:
>       file:
>         directory: /etc/traefik/dynamic/
>         watch: true
>     # Configure Logger
>     log:
>       level: INFO
>       format: json
>     # Print acess logs
>     accessLog:
>       format: json
>     # enable Prometheus metrics
>     metrics:
>       prometheus:
>         entryPoint: metrics
>     # enable Jaeger tracing
>     # tracing:
>     #   jaeger: {}
>     experimental:
>       plugins:
>         jwt:
>           moduleName: github.com/traefik-plugins/traefik-jwt-plugin
>           version: v0.9.0
>     authSources:
>       jwtSource:
>         jwt:
>           jwksUrl: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/certs
> kind: ConfigMap
> metadata:
>   name: workspaces-traefik-sidecar-static-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> kind: Secret
> metadata:
>   annotations:
>     kubernetes.io/service-account.name: workspaces-metrics-reader
>   name: workspaces-metrics-reader
>   namespace: workspaces-system
> type: kubernetes.io/service-account-token
> ---
> apiVersion: v1
> kind: Service
> metadata:
>   labels:
>     app.kubernetes.io/component: metrics
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager-metrics-monitor
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: servicemonitor
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-controller-manager-metrics
>   namespace: workspaces-system
> spec:
>   ports:
>   - name: metrics
>     port: 8080
>     protocol: TCP
>     targetPort: 8080
>   selector:
>     control-plane: controller-manager
>   sessionAffinity: None
>   type: ClusterIP
> ---
> apiVersion: v1
> kind: Service
> metadata:
>   labels:
>     provider: workspaces
>     run: rest-api-server
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> spec:
>   ports:
>   - port: 8000
>     protocol: TCP
>     targetPort: 8000
>   selector:
>     app: rest-api-server
>   sessionAffinity: None
>   type: ClusterIP
> ---
> apiVersion: v1
> kind: Service
> metadata:
>   labels:
>     provider: workspaces
>     run: rest-api-server
>   name: workspaces-rest-api-server-metrics
>   namespace: workspaces-system
> spec:
>   ports:
>   - port: 8001
>     protocol: TCP
>     targetPort: 8001
>   selector:
>     app: rest-api-server
>   sessionAffinity: None
>   type: ClusterIP
> ---
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   labels:
>     app.kubernetes.io/component: manager
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: deployment
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       control-plane: controller-manager
>   template:
>     metadata:
>       annotations:
>         kubectl.kubernetes.io/default-container: manager
>       labels:
>         control-plane: controller-manager
>     spec:
>       affinity:
>         nodeAffinity:
>           requiredDuringSchedulingIgnoredDuringExecution:
>             nodeSelectorTerms:
>             - matchExpressions:
>               - key: kubernetes.io/arch
>                 operator: In
>                 values:
>                 - amd64
>               - key: kubernetes.io/os
>                 operator: In
>                 values:
>                 - linux
>       containers:
>       - args:
>         - --health-probe-bind-address=:8081
>         - --metrics-bind-address=0.0.0.0:8080
>         - --leader-elect
>         command:
>         - /manager
>         env:
>         - name: KUBESAW_NAMESPACE
>           valueFrom:
>             configMapKeyRef:
>               key: kubesaw.namespace
>               name: workspaces-operator-config
>         - name: WORKSPACES_NAMESPACE
>           valueFrom:
>             fieldRef:
>               fieldPath: metadata.namespace
>         image: quay.io/konflux-workspaces/workspaces-operator:v0.1.0-alpha8
>         imagePullPolicy: IfNotPresent
>         livenessProbe:
>           httpGet:
>             path: /healthz
>             port: 8081
>           initialDelaySeconds: 15
>           periodSeconds: 20
>         name: manager
>         ports:
>         - containerPort: 8081
>           name: http
>         readinessProbe:
>           httpGet:
>             path: /readyz
>             port: 8081
>           initialDelaySeconds: 5
>           periodSeconds: 10
>         resources:
>           limits:
>             cpu: 500m
>             memory: 128Mi
>           requests:
>             cpu: 10m
>             memory: 64Mi
>         securityContext:
>           allowPrivilegeEscalation: false
>           capabilities:
>             drop:
>             - ALL
>           readOnlyRootFilesystem: true
>       securityContext:
>         runAsNonRoot: true
>       serviceAccountName: workspaces-controller-manager
>       terminationGracePeriodSeconds: 10
> ---
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   labels:
>     app: rest-api-server
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       app: rest-api-server
>   template:
>     metadata:
>       labels:
>         app: rest-api-server
>     spec:
>       containers:
>       - image: traefik:v3.1.6
>         imagePullPolicy: IfNotPresent
>         name: proxy
>         resources:
>           limits:
>             cpu: 500m
>             memory: 128Mi
>           requests:
>             cpu: 10m
>             memory: 64Mi
>         securityContext:
>           allowPrivilegeEscalation: false
>           capabilities:
>             drop:
>             - ALL
>           readOnlyRootFilesystem: true
>         volumeMounts:
>         - mountPath: /etc/traefik
>           name: traefik-static-config
>         - mountPath: /etc/traefik/dynamic
>           name: traefik-dynamic-config
>         - mountPath: /plugins-storage
>           name: traefik-plugin-storage
>       - env:
>         - name: KUBESAW_NAMESPACE
>           valueFrom:
>             configMapKeyRef:
>               key: kubesaw.namespace
>               name: workspaces-rest-api-server-config
>         - name: LOG_LEVEL
>           valueFrom:
>             configMapKeyRef:
>               key: log.level
>               name: workspaces-rest-api-server-config
>         - name: WORKSPACES_NAMESPACE
>           valueFrom:
>             fieldRef:
>               fieldPath: metadata.namespace
>         image: quay.io/konflux-workspaces/workspaces-server:v0.1.0-alpha8
>         imagePullPolicy: IfNotPresent
>         name: rest-api
>         ports:
>         - containerPort: 8080
>           name: http
>         resources:
>           limits:
>             cpu: 500m
>             memory: 128Mi
>           requests:
>             cpu: 10m
>             memory: 64Mi
>         securityContext:
>           allowPrivilegeEscalation: false
>           capabilities:
>             drop:
>             - ALL
>           readOnlyRootFilesystem: true
>       securityContext:
>         runAsNonRoot: true
>       serviceAccountName: workspaces-rest-api-server
>       terminationGracePeriodSeconds: 60
>       volumes:
>       - emptyDir:
>           sizeLimit: 20Mi
>         name: traefik-plugin-storage
>       - configMap:
>           name: workspaces-traefik-sidecar-static-config
>         name: traefik-static-config
>       - configMap:
>           name: workspaces-traefik-sidecar-dynamic-config
>         name: traefik-dynamic-config
> ---
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   labels:
>     app.kubernetes.io/component: metrics
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager-metrics-monitor
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: servicemonitor
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-metrics-proxy
>   namespace: workspaces-system
> spec:
>   endpoints:
>   - authorization:
>       credentials:
>         key: token
>         name: workspaces-metrics-reader
>     interval: 15s
>     path: /metrics
>     port: metrics
>     scheme: http
>   selector:
>     matchLabels:
>       app.kubernetes.io/component: metrics
>       control-plane: controller-manager
diff -r '--exclude=kustomize.out.lint' ./kustomized-cache/commit-23d1a0ca/staging/components/workspaces/staging/stone-stg-host/kustomize.out.yaml ./kustomized-cache/commit-0aacb13b/staging/components/workspaces/staging/stone-stg-host/kustomize.out.yaml
0a1,1136
> apiVersion: v1
> kind: Namespace
> metadata:
>   labels:
>     app.kubernetes.io/component: manager
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: system
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: namespace
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-system
> ---
> apiVersion: apiextensions.k8s.io/v1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.14.0
>   name: internalworkspaces.workspaces.konflux-ci.dev
> spec:
>   group: workspaces.konflux-ci.dev
>   names:
>     kind: InternalWorkspace
>     listKind: InternalWorkspaceList
>     plural: internalworkspaces
>     singular: internalworkspace
>   scope: Namespaced
>   versions:
>   - additionalPrinterColumns:
>     - jsonPath: .spec.visibility
>       name: Visibility
>       type: string
>     name: v1alpha1
>     schema:
>       openAPIV3Schema:
>         description: InternalWorkspace is the Schema for the workspaces API
>         properties:
>           apiVersion:
>             description: |-
>               APIVersion defines the versioned schema of this representation of an object.
>               Servers should convert recognized schemas to the latest internal value, and
>               may reject unrecognized values.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
>             type: string
>           kind:
>             description: |-
>               Kind is a string value representing the REST resource this object represents.
>               Servers may infer this from the endpoint the client submits requests to.
>               Cannot be updated.
>               In CamelCase.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
>             type: string
>           metadata:
>             type: object
>           spec:
>             description: InternalWorkspaceSpec defines the desired state of Workspace
>             properties:
>               displayName:
>                 type: string
>               owner:
>                 description: UserInfo contains information about a user identity
>                 properties:
>                   jwtInfo:
>                     description: JwtInfo contains information extracted from the user
>                       JWT Token
>                     properties:
>                       email:
>                         type: string
>                       sub:
>                         type: string
>                       userId:
>                         type: string
>                     required:
>                     - email
>                     - sub
>                     - userId
>                     type: object
>                 required:
>                 - jwtInfo
>                 type: object
>               visibility:
>                 enum:
>                 - community
>                 - private
>                 type: string
>             required:
>             - displayName
>             - owner
>             - visibility
>             type: object
>           status:
>             description: InternalWorkspaceStatus defines the observed state of Workspace
>             properties:
>               conditions:
>                 items:
>                   description: "Condition contains details for one aspect of the current
>                     state of this API Resource.\n---\nThis struct is intended for
>                     direct use as an array at the field path .status.conditions.  For
>                     example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
>                     observations of a foo's current state.\n\t    // Known .status.conditions.type
>                     are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
>                     +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
>                     \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
>                     patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
>                     \   // other fields\n\t}"
>                   properties:
>                     lastTransitionTime:
>                       description: |-
>                         lastTransitionTime is the last time the condition transitioned from one status to another.
>                         This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
>                       format: date-time
>                       type: string
>                     message:
>                       description: |-
>                         message is a human readable message indicating details about the transition.
>                         This may be an empty string.
>                       maxLength: 32768
>                       type: string
>                     observedGeneration:
>                       description: |-
>                         observedGeneration represents the .metadata.generation that the condition was set based upon.
>                         For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
>                         with respect to the current state of the instance.
>                       format: int64
>                       minimum: 0
>                       type: integer
>                     reason:
>                       description: |-
>                         reason contains a programmatic identifier indicating the reason for the condition's last transition.
>                         Producers of specific condition types may define expected values and meanings for this field,
>                         and whether the values are considered a guaranteed API.
>                         The value should be a CamelCase string.
>                         This field may not be empty.
>                       maxLength: 1024
>                       minLength: 1
>                       pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
>                       type: string
>                     status:
>                       description: status of the condition, one of True, False, Unknown.
>                       enum:
>                       - "True"
>                       - "False"
>                       - Unknown
>                       type: string
>                     type:
>                       description: |-
>                         type of condition in CamelCase or in foo.example.com/CamelCase.
>                         ---
>                         Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
>                         useful (see .node.status.conditions), the ability to deconflict is important.
>                         The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
>                       maxLength: 316
>                       pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
>                       type: string
>                   required:
>                   - lastTransitionTime
>                   - message
>                   - reason
>                   - status
>                   - type
>                   type: object
>                 type: array
>               owner:
>                 description: Owner contains information on the owner
>                 properties:
>                   username:
>                     type: string
>                 type: object
>               space:
>                 description: Space contains information about the underlying Space
>                 properties:
>                   isHome:
>                     type: boolean
>                   name:
>                     type: string
>                   targetCluster:
>                     description: TargetCluster contains the URL to the cluster where
>                       the workspace's namespaces live
>                     type: string
>                 required:
>                 - isHome
>                 - name
>                 type: object
>             type: object
>         type: object
>     served: true
>     storage: true
>     subresources:
>       status: {}
> ---
> apiVersion: apiextensions.k8s.io/v1
> kind: CustomResourceDefinition
> metadata:
>   annotations:
>     controller-gen.kubebuilder.io/version: v0.14.0
>   name: workspaces.workspaces.konflux-ci.dev
> spec:
>   group: workspaces.konflux-ci.dev
>   names:
>     kind: Workspace
>     listKind: WorkspaceList
>     plural: workspaces
>     singular: workspace
>   scope: Namespaced
>   versions:
>   - additionalPrinterColumns:
>     - jsonPath: .spec.visibility
>       name: Visibility
>       type: string
>     name: v1alpha1
>     schema:
>       openAPIV3Schema:
>         description: Workspace is the Schema for the workspaces API
>         properties:
>           apiVersion:
>             description: |-
>               APIVersion defines the versioned schema of this representation of an object.
>               Servers should convert recognized schemas to the latest internal value, and
>               may reject unrecognized values.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
>             type: string
>           kind:
>             description: |-
>               Kind is a string value representing the REST resource this object represents.
>               Servers may infer this from the endpoint the client submits requests to.
>               Cannot be updated.
>               In CamelCase.
>               More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
>             type: string
>           metadata:
>             type: object
>           spec:
>             description: WorkspaceSpec defines the desired state of Workspace
>             properties:
>               visibility:
>                 enum:
>                 - community
>                 - private
>                 type: string
>             required:
>             - visibility
>             type: object
>           status:
>             description: WorkspaceStatus defines the observed state of Workspace
>             properties:
>               conditions:
>                 items:
>                   description: "Condition contains details for one aspect of the current
>                     state of this API Resource.\n---\nThis struct is intended for
>                     direct use as an array at the field path .status.conditions.  For
>                     example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
>                     observations of a foo's current state.\n\t    // Known .status.conditions.type
>                     are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
>                     +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
>                     \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
>                     patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
>                     \   // other fields\n\t}"
>                   properties:
>                     lastTransitionTime:
>                       description: |-
>                         lastTransitionTime is the last time the condition transitioned from one status to another.
>                         This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
>                       format: date-time
>                       type: string
>                     message:
>                       description: |-
>                         message is a human readable message indicating details about the transition.
>                         This may be an empty string.
>                       maxLength: 32768
>                       type: string
>                     observedGeneration:
>                       description: |-
>                         observedGeneration represents the .metadata.generation that the condition was set based upon.
>                         For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
>                         with respect to the current state of the instance.
>                       format: int64
>                       minimum: 0
>                       type: integer
>                     reason:
>                       description: |-
>                         reason contains a programmatic identifier indicating the reason for the condition's last transition.
>                         Producers of specific condition types may define expected values and meanings for this field,
>                         and whether the values are considered a guaranteed API.
>                         The value should be a CamelCase string.
>                         This field may not be empty.
>                       maxLength: 1024
>                       minLength: 1
>                       pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
>                       type: string
>                     status:
>                       description: status of the condition, one of True, False, Unknown.
>                       enum:
>                       - "True"
>                       - "False"
>                       - Unknown
>                       type: string
>                     type:
>                       description: |-
>                         type of condition in CamelCase or in foo.example.com/CamelCase.
>                         ---
>                         Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
>                         useful (see .node.status.conditions), the ability to deconflict is important.
>                         The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
>                       maxLength: 316
>                       pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
>                       type: string
>                   required:
>                   - lastTransitionTime
>                   - message
>                   - reason
>                   - status
>                   - type
>                   type: object
>                 type: array
>               owner:
>                 description: UserInfoStatus User info stored in the status
>                 properties:
>                   email:
>                     type: string
>                 required:
>                 - email
>                 type: object
>               space:
>                 description: SpaceInfo Information about a Space
>                 properties:
>                   name:
>                     type: string
>                   targetCluster:
>                     description: TargetCluster contains the URL to the cluster where
>                       the workspace's namespaces live
>                     type: string
>                 required:
>                 - name
>                 type: object
>             type: object
>         type: object
>     served: true
>     storage: true
>     subresources:
>       status: {}
> ---
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: serviceaccount
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: workspaces-metrics-reader
>   namespace: workspaces-system
> ---
> apiVersion: v1
> kind: ServiceAccount
> metadata:
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-spacebinding-reader
>   namespace: toolchain-host-operator
> rules:
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - spacebindings
>   verbs:
>   - list
>   - get
>   - watch
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-usersignup-reader
>   namespace: toolchain-host-operator
> rules:
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - usersignups
>   verbs:
>   - list
>   - get
>   - watch
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: leader-election-role
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: role
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-leader-election-role
>   namespace: workspaces-system
> rules:
> - apiGroups:
>   - ""
>   resources:
>   - configmaps
>   verbs:
>   - get
>   - list
>   - watch
>   - create
>   - update
>   - patch
>   - delete
> - apiGroups:
>   - coordination.k8s.io
>   resources:
>   - leases
>   verbs:
>   - get
>   - list
>   - watch
>   - create
>   - update
>   - patch
>   - delete
> - apiGroups:
>   - ""
>   resources:
>   - events
>   verbs:
>   - create
>   - patch
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-workspace-server-editor
>   namespace: workspaces-system
> rules:
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces
>   verbs:
>   - list
>   - get
>   - watch
>   - update
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: Role
> metadata:
>   name: workspaces-service-maintainer
> rules:
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - '*'
>   verbs:
>   - '*'
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   name: workspaces-manager-role
> rules:
> - apiGroups:
>   - rbac.authorization.k8s.io
>   resources:
>   - rolebindings
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - rbac.authorization.k8s.io
>   resources:
>   - roles
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - spacebindings
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - spaces
>   verbs:
>   - create
>   - delete
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - toolchainstatuses
>   verbs:
>   - get
>   - list
>   - watch
> - apiGroups:
>   - toolchain.dev.openshift.com
>   resources:
>   - usersignups
>   verbs:
>   - get
>   - list
>   - watch
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces
>   verbs:
>   - create
>   - delete
>   - deletecollection
>   - get
>   - list
>   - patch
>   - update
>   - watch
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces/finalizers
>   verbs:
>   - update
> - apiGroups:
>   - workspaces.konflux-ci.dev
>   resources:
>   - internalworkspaces/status
>   verbs:
>   - get
>   - patch
>   - update
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   labels:
>     app.kubernetes.io/component: kube-rbac-proxy
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: metrics-reader
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrole
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-metrics-reader
> rules:
> - nonResourceURLs:
>   - /metrics
>   verbs:
>   - get
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRole
> metadata:
>   labels:
>     app.kubernetes.io/component: kube-rbac-proxy
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: proxy-role
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrole
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-proxy-role
> rules:
> - apiGroups:
>   - authentication.k8s.io
>   resources:
>   - tokenreviews
>   verbs:
>   - create
> - apiGroups:
>   - authorization.k8s.io
>   resources:
>   - subjectaccessreviews
>   verbs:
>   - create
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-rest-api-server:spacebinding-reader
>   namespace: toolchain-host-operator
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-spacebinding-reader
> subjects:
> - kind: ServiceAccount
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-rest-api-server:usersignup-reader
>   namespace: toolchain-host-operator
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-usersignup-reader
> subjects:
> - kind: ServiceAccount
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: leader-election-rolebinding
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: rolebinding
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-leader-election-rolebinding
>   namespace: workspaces-system
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-leader-election-role
> subjects:
> - kind: ServiceAccount
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-rest-api-server:workspace-server-editor
>   namespace: workspaces-system
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-workspace-server-editor
> subjects:
> - kind: ServiceAccount
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: RoleBinding
> metadata:
>   name: workspaces-service-maintainer
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: Role
>   name: workspaces-service-maintainer
> subjects:
> - apiGroup: rbac.authorization.k8s.io
>   kind: Group
>   name: konflux-core
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/component: rbac
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: manager-rolebinding
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrolebinding
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-manager-rolebinding
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: workspaces-manager-role
> subjects:
> - kind: ServiceAccount
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   name: workspaces-metrics-reader
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: workspaces-metrics-reader
> subjects:
> - kind: ServiceAccount
>   name: workspaces-metrics-reader
>   namespace: workspaces-system
> ---
> apiVersion: rbac.authorization.k8s.io/v1
> kind: ClusterRoleBinding
> metadata:
>   labels:
>     app.kubernetes.io/component: kube-rbac-proxy
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: proxy-rolebinding
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: clusterrolebinding
>     app.kubernetes.io/part-of: workspaces
>   name: workspaces-proxy-rolebinding
> roleRef:
>   apiGroup: rbac.authorization.k8s.io
>   kind: ClusterRole
>   name: workspaces-proxy-role
> subjects:
> - kind: ServiceAccount
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   kubesaw.namespace: toolchain-host-operator
> kind: ConfigMap
> metadata:
>   name: workspaces-operator-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   kubesaw.namespace: toolchain-host-operator
>   log.level: "-4"
> kind: ConfigMap
> metadata:
>   name: workspaces-rest-api-server-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   config.yaml: |
>     http:
>       services:
>         web:
>           loadBalancer:
>             servers:
>             - url: "http://localhost:8080/"
>       routers:
>         app-apis:
>           service: web
>           entrypoints:
>           - web
>           rule: PathPrefix(`/apis/workspaces.konflux-ci.dev`) && ( Method(`GET`) || Method(`PUT`) || Method(`PATCH`) )
>           middlewares:
>             - jwt-authorizer
>         app-healthz:
>           service: web
>           entrypoints:
>           - web
>           rule: Path(`/healthz`)
> 
>     # Middlewares
>       middlewares:
> 
>     # JWT Auth
>         jwt-authorizer:
>           plugin:
>             jwt:
>               payloadFields:
>               - sub
>               - exp
>               required: true
>               keys: []
>               jwtHeaders:
>                 X-Subject: sub
>               jwtSources:
>               - type: bearer
>                 key: Authorization
> kind: ConfigMap
> metadata:
>   name: workspaces-traefik-sidecar-dynamic-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> data:
>   traefik.yaml: |
>     entryPoints:
>       web:
>         address: ":8000"
>       metrics:
>         address: ":8001"
>     providers:
>       file:
>         directory: /etc/traefik/dynamic/
>         watch: true
>     # Configure Logger
>     log:
>       level: INFO
>       format: json
>     # Print acess logs
>     accessLog:
>       format: json
>     # enable Prometheus metrics
>     metrics:
>       prometheus:
>         entryPoint: metrics
>     # enable Jaeger tracing
>     # tracing:
>     #   jaeger: {}
>     experimental:
>       plugins:
>         jwt:
>           moduleName: github.com/traefik-plugins/traefik-jwt-plugin
>           version: v0.9.0
>     authSources:
>       jwtSource:
>         jwt:
>           jwksUrl: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/certs
> kind: ConfigMap
> metadata:
>   name: workspaces-traefik-sidecar-static-config
>   namespace: workspaces-system
> ---
> apiVersion: v1
> kind: Secret
> metadata:
>   annotations:
>     kubernetes.io/service-account.name: workspaces-metrics-reader
>   name: workspaces-metrics-reader
>   namespace: workspaces-system
> type: kubernetes.io/service-account-token
> ---
> apiVersion: v1
> kind: Service
> metadata:
>   labels:
>     app.kubernetes.io/component: metrics
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager-metrics-monitor
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: servicemonitor
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-controller-manager-metrics
>   namespace: workspaces-system
> spec:
>   ports:
>   - name: metrics
>     port: 8080
>     protocol: TCP
>     targetPort: 8080
>   selector:
>     control-plane: controller-manager
>   sessionAffinity: None
>   type: ClusterIP
> ---
> apiVersion: v1
> kind: Service
> metadata:
>   labels:
>     provider: workspaces
>     run: rest-api-server
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> spec:
>   ports:
>   - port: 8000
>     protocol: TCP
>     targetPort: 8000
>   selector:
>     app: rest-api-server
>   sessionAffinity: None
>   type: ClusterIP
> ---
> apiVersion: v1
> kind: Service
> metadata:
>   labels:
>     provider: workspaces
>     run: rest-api-server
>   name: workspaces-rest-api-server-metrics
>   namespace: workspaces-system
> spec:
>   ports:
>   - port: 8001
>     protocol: TCP
>     targetPort: 8001
>   selector:
>     app: rest-api-server
>   sessionAffinity: None
>   type: ClusterIP
> ---
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   labels:
>     app.kubernetes.io/component: manager
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: deployment
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-controller-manager
>   namespace: workspaces-system
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       control-plane: controller-manager
>   template:
>     metadata:
>       annotations:
>         kubectl.kubernetes.io/default-container: manager
>       labels:
>         control-plane: controller-manager
>     spec:
>       affinity:
>         nodeAffinity:
>           requiredDuringSchedulingIgnoredDuringExecution:
>             nodeSelectorTerms:
>             - matchExpressions:
>               - key: kubernetes.io/arch
>                 operator: In
>                 values:
>                 - amd64
>               - key: kubernetes.io/os
>                 operator: In
>                 values:
>                 - linux
>       containers:
>       - args:
>         - --health-probe-bind-address=:8081
>         - --metrics-bind-address=0.0.0.0:8080
>         - --leader-elect
>         command:
>         - /manager
>         env:
>         - name: KUBESAW_NAMESPACE
>           valueFrom:
>             configMapKeyRef:
>               key: kubesaw.namespace
>               name: workspaces-operator-config
>         - name: WORKSPACES_NAMESPACE
>           valueFrom:
>             fieldRef:
>               fieldPath: metadata.namespace
>         image: quay.io/konflux-workspaces/workspaces-operator:v0.1.0-alpha8
>         imagePullPolicy: IfNotPresent
>         livenessProbe:
>           httpGet:
>             path: /healthz
>             port: 8081
>           initialDelaySeconds: 15
>           periodSeconds: 20
>         name: manager
>         ports:
>         - containerPort: 8081
>           name: http
>         readinessProbe:
>           httpGet:
>             path: /readyz
>             port: 8081
>           initialDelaySeconds: 5
>           periodSeconds: 10
>         resources:
>           limits:
>             cpu: 500m
>             memory: 128Mi
>           requests:
>             cpu: 10m
>             memory: 64Mi
>         securityContext:
>           allowPrivilegeEscalation: false
>           capabilities:
>             drop:
>             - ALL
>           readOnlyRootFilesystem: true
>       securityContext:
>         runAsNonRoot: true
>       serviceAccountName: workspaces-controller-manager
>       terminationGracePeriodSeconds: 10
> ---
> apiVersion: apps/v1
> kind: Deployment
> metadata:
>   labels:
>     app: rest-api-server
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> spec:
>   replicas: 1
>   selector:
>     matchLabels:
>       app: rest-api-server
>   template:
>     metadata:
>       labels:
>         app: rest-api-server
>     spec:
>       containers:
>       - image: traefik:v3.1.6
>         imagePullPolicy: IfNotPresent
>         name: proxy
>         resources:
>           limits:
>             cpu: 500m
>             memory: 128Mi
>           requests:
>             cpu: 10m
>             memory: 64Mi
>         securityContext:
>           allowPrivilegeEscalation: false
>           capabilities:
>             drop:
>             - ALL
>           readOnlyRootFilesystem: true
>         volumeMounts:
>         - mountPath: /etc/traefik
>           name: traefik-static-config
>         - mountPath: /etc/traefik/dynamic
>           name: traefik-dynamic-config
>         - mountPath: /plugins-storage
>           name: traefik-plugin-storage
>       - env:
>         - name: KUBESAW_NAMESPACE
>           valueFrom:
>             configMapKeyRef:
>               key: kubesaw.namespace
>               name: workspaces-rest-api-server-config
>         - name: LOG_LEVEL
>           valueFrom:
>             configMapKeyRef:
>               key: log.level
>               name: workspaces-rest-api-server-config
>         - name: WORKSPACES_NAMESPACE
>           valueFrom:
>             fieldRef:
>               fieldPath: metadata.namespace
>         image: quay.io/konflux-workspaces/workspaces-server:v0.1.0-alpha8
>         imagePullPolicy: IfNotPresent
>         name: rest-api
>         ports:
>         - containerPort: 8080
>           name: http
>         resources:
>           limits:
>             cpu: 500m
>             memory: 128Mi
>           requests:
>             cpu: 10m
>             memory: 64Mi
>         securityContext:
>           allowPrivilegeEscalation: false
>           capabilities:
>             drop:
>             - ALL
>           readOnlyRootFilesystem: true
>       securityContext:
>         runAsNonRoot: true
>       serviceAccountName: workspaces-rest-api-server
>       terminationGracePeriodSeconds: 60
>       volumes:
>       - emptyDir:
>           sizeLimit: 20Mi
>         name: traefik-plugin-storage
>       - configMap:
>           name: workspaces-traefik-sidecar-static-config
>         name: traefik-static-config
>       - configMap:
>           name: workspaces-traefik-sidecar-dynamic-config
>         name: traefik-dynamic-config
> ---
> apiVersion: monitoring.coreos.com/v1
> kind: ServiceMonitor
> metadata:
>   labels:
>     app.kubernetes.io/component: metrics
>     app.kubernetes.io/created-by: workspaces
>     app.kubernetes.io/instance: controller-manager-metrics-monitor
>     app.kubernetes.io/managed-by: kustomize
>     app.kubernetes.io/name: servicemonitor
>     app.kubernetes.io/part-of: workspaces
>     control-plane: controller-manager
>   name: workspaces-metrics-proxy
>   namespace: workspaces-system
> spec:
>   endpoints:
>   - authorization:
>       credentials:
>         key: token
>         name: workspaces-metrics-reader
>     interval: 15s
>     path: /metrics
>     port: metrics
>     scheme: http
>   selector:
>     matchLabels:
>       app.kubernetes.io/component: metrics
>       control-plane: controller-manager
> ---
> apiVersion: route.openshift.io/v1
> kind: Route
> metadata:
>   labels:
>     app: rest-api-server
>     provider: workspaces
>   name: workspaces-rest-api-server
>   namespace: workspaces-system
> spec:
>   host: workspaces-rest-api-server-workspaces-system.apps.stone-stg-host.qc0p.p1.openshiftapps.com
>   port:
>     targetPort: 8000
>   tls:
>     termination: edge
>   to:
>     kind: Service
>     name: workspaces-rest-api-server
>     weight: 100
>   wildcardPolicy: None
