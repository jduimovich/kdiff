apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: application-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: application-service-controller-manager
  namespace: application-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: metrics-reader
  namespace: application-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: application-service-leader-election-role
  namespace: application-service
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: has-admin
  namespace: application-service
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - delete
- apiGroups:
  - apps
  resources:
  - deployments/scale
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: application-service-application-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: application-service-application-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: application-service-component-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: application-service-component-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: application-service-componentdetectionquery-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: application-service-componentdetectionquery-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: application-service-manager-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - componentdetectionqueries/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - spifilecontentrequests
  verbs:
  - create
  - get
  - list
- apiGroups:
  - appstudio.redhat.com
  resources:
  - spifilecontentrequests/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - spifilecontentrequests/status
  verbs:
  - get
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: application-service-manager-role-build
rules:
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggers
  - triggertemplates
  verbs:
  - create
  - update
  - patch
  - delete
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  - secrets
  - serviceaccounts
  verbs:
  - get
  - list
  - create
  - watch
  - update
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - create
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: application-service-manager-role-spi
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - spiaccesstokenbindings
  - spiaccesstokens
  verbs:
  - '*'
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - list
  - get
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: application-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: application-service-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-manager-for-has
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - patch
  - get
  - list
  - create
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: application-service-leader-election-rolebinding
  namespace: application-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: application-service-leader-election-role
subjects:
- kind: ServiceAccount
  name: application-service-controller-manager
  namespace: application-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: application-service-maintainers
  namespace: application-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: component-maintainer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-has
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grant-argocd
  namespace: application-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: has-admin
  namespace: application-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: has-admin
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-has
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: application-service-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-service-manager-role
subjects:
- kind: ServiceAccount
  name: application-service-controller-manager
  namespace: application-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: application-service-manager-rolebinding-build
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-service-manager-role-build
subjects:
- kind: ServiceAccount
  name: application-service-controller-manager
  namespace: application-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: application-service-manager-rolebinding-spi
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-service-manager-role-spi
subjects:
- kind: ServiceAccount
  name: application-service-controller-manager
  namespace: application-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: application-service-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-service-proxy-role
subjects:
- kind: ServiceAccount
  name: application-service-controller-manager
  namespace: application-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grant-argocd-crd-permissions-for-has
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-manager-for-has
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-application-service-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: application-service-metrics-reader
subjects:
- kind: ServiceAccount
  name: metrics-reader
  namespace: application-service
---
apiVersion: v1
data:
  DEVFILE_REGISTRY_URL: ""
kind: ConfigMap
metadata:
  name: application-service-devfile-registry-config
  namespace: application-service
---
apiVersion: v1
data:
  ENVIRONMENT: production
kind: ConfigMap
metadata:
  name: application-service-feature-flag-config
  namespace: application-service
---
apiVersion: v1
data:
  GITHUB_ORG: redhat-appstudio-appdata
kind: ConfigMap
metadata:
  name: application-service-github-config
  namespace: application-service
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f50829e1.redhat.com
kind: ConfigMap
metadata:
  name: application-service-manager-config
  namespace: application-service
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: metrics-reader
  name: metrics-reader
  namespace: application-service
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: application-service-controller-manager-metrics-service
  namespace: application-service
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
  name: application-service-webhook-service
  namespace: application-service
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: application-service-controller-manager
  namespace: application-service
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - entrypoint.sh
        env:
        - name: ENABLE_PPROF
          value: "true"
        - name: IMAGE_REPOSITORY
          value: ""
        - name: GITHUB_ORG
          valueFrom:
            configMapKeyRef:
              key: GITHUB_ORG
              name: application-service-github-config
              optional: true
        - name: GITHUB_AUTH_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: has-github-token
              optional: true
        - name: GITHUB_TOKEN_LIST
          valueFrom:
            secretKeyRef:
              key: tokens
              name: has-github-token
              optional: true
        - name: CDQ_GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              key: cdq-token
              name: has-github-token
              optional: true
        - name: DEVFILE_REGISTRY_URL
          valueFrom:
            configMapKeyRef:
              key: DEVFILE_REGISTRY_URL
              name: application-service-devfile-registry-config
              optional: true
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              key: ENVIRONMENT
              name: application-service-feature-flag-config
              optional: true
        image: quay.io/redhat-appstudio/application-service:38f1c98cff769f7ee98fe16bb57ab4ca0f751f49
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8081
          name: health
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 2Gi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        - mountPath: /tmp
          name: tmp-storage
          readOnly: false
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        - --http2-disable=true
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 400Mi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: application-service-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      - emptyDir: {}
        name: tmp-storage
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
  name: has-github-token
  namespace: application-service
spec:
  dataFrom:
  - extract:
      key: production/has/github-token
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: appsre-stonesoup-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: has-github-token
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: service-monitor
  namespace: application-service
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: metrics-reader
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: application-service-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: application-service-webhook-service
      namespace: application-service
      path: /mutate-appstudio-redhat-com-v1alpha1-application
  failurePolicy: Fail
  name: mapplication.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - applications
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: application-service-webhook-service
      namespace: application-service
      path: /mutate-appstudio-redhat-com-v1alpha1-component
  failurePolicy: Fail
  name: mcomponent.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - components
    - components/status
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: application-service-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: application-service-webhook-service
      namespace: application-service
      path: /validate-appstudio-redhat-com-v1alpha1-application
  failurePolicy: Fail
  name: vapplication.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - applications
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: application-service-webhook-service
      namespace: application-service
      path: /validate-appstudio-redhat-com-v1alpha1-component
  failurePolicy: Fail
  name: vcomponent.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - components
  sideEffects: None
