apiVersion: v1
kind: Secret
metadata:
  labels:
    appstudio.redhat.com/host-cluster: "true"
    appstudio.redhat.com/internal-member-cluster: "true"
    appstudio.redhat.com/member-cluster: "true"
    appstudio.redhat.com/toolchain-member: "true"
    argocd.argoproj.io/secret-type: cluster
  name: cluster-kubernetes.default.svc
  namespace: openshift-gitops
stringData:
  config: '{"tlsClientConfig":{"insecure":false}}'
  name: in-cluster-local
  server: https://kubernetes.default.svc
type: Opaque
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: application-api
  namespace: openshift-gitops
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          appstudio.redhat.com/member-cluster: "true"
  template:
    metadata:
      name: application-api-{{nameNormalized}}
    spec:
      destination:
        namespace: application-api
        server: '{{server}}'
      project: default
      source:
        path: components/application-api
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: build-service
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/build-service
      - list:
          elements:
          - nameNormalized: kflux-ocp-p01
            values.clusterDir: kflux-ocp-p01
          - nameNormalized: stone-stage-p01
            values.clusterDir: stone-stage-p01
          - nameNormalized: stone-prod-p01
            values.clusterDir: stone-prod-p01
          - nameNormalized: stone-prod-p02
            values.clusterDir: stone-prod-p02
          - nameNormalized: kflux-prd-rh02
            values.clusterDir: kflux-prd-rh02
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: build-service-{{nameNormalized}}
    spec:
      destination:
        namespace: default
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: build-templates
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/build-templates
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: build-templates-{{nameNormalized}}
    spec:
      destination:
        namespace: default
        server: '{{server}}'
      ignoreDifferences:
      - group: ""
        jqPathExpressions:
        - .imagePullSecrets[] | select(.name | startswith("appstudio-pipeline-dockercfg"))
        kind: ServiceAccount
        name: appstudio-pipeline
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-as-a-service
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/eaas-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/cluster-as-a-service
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: cluster-as-a-service-{{nameNormalized}}
    spec:
      destination:
        namespace: cluster-as-a-service
        server: '{{server}}'
      ignoreDifferences:
      - group: argoproj.io
        jqPathExpressions:
        - .spec.generators
        kind: ApplicationSet
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: crossplane-config
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/eaas-cluster: "true"
          values:
            clusterDir: ""
            environment: staging
            sourceRoot: components/crossplane-config
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: crossplane-config-{{nameNormalized}}
    spec:
      destination:
        namespace: crossplane-config
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: crossplane-control-plane
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/crossplane-control-plane
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: crossplane-control-plane-{{nameNormalized}}
    spec:
      destination:
        namespace: crossplane-system
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: dev-sso
  namespace: openshift-gitops
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          appstudio.redhat.com/host-cluster: "true"
  template:
    metadata:
      name: dev-sso-{{nameNormalized}}
    spec:
      destination:
        namespace: dev-sso
        server: '{{server}}'
      project: default
      source:
        path: components/dev-sso
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: disable-csvcopy
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: NotIn
              values:
              - argocd-default-cluster-config
            - key: clustertemplateinstance.openshift.io/name
              operator: DoesNotExist
            matchLabels:
              argocd.argoproj.io/secret-type: cluster
          values:
            clusterDir: ""
            environment: staging
            sourceRoot: configs/disable-csvcopy-for-all-cluster
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: disable-csvcopy-{{nameNormalized}}
    spec:
      destination:
        server: '{{server}}'
      project: default
      source:
        path: configs/disable-csvcopy-for-all-cluster
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: dora-metrics
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: NotIn
              values:
              - argocd-default-cluster-config
            - key: clustertemplateinstance.openshift.io/name
              operator: DoesNotExist
            matchLabels:
              argocd.argoproj.io/secret-type: cluster
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/dora-metrics
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: dora-metrics-{{nameNormalized}}
    spec:
      destination:
        namespace: dora-metrics
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: enterprise-contract
  namespace: openshift-gitops
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          appstudio.redhat.com/member-cluster: "true"
  template:
    metadata:
      name: enterprise-contract-{{nameNormalized}}
    spec:
      destination:
        namespace: enterprise-contract-service
        server: '{{server}}'
      project: default
      source:
        path: components/enterprise-contract
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: has
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/has
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: has-{{nameNormalized}}
    spec:
      destination:
        namespace: application-service
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: image-controller
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/image-controller
      - list:
          elements:
          - nameNormalized: stone-prd-rh01
            values.clusterDir: stone-prd-rh01
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: image-controller-{{nameNormalized}}
    spec:
      destination:
        namespace: default
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: ingresscontroller
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/host-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: configs/ingresscontroller
      - list:
          elements:
          - nameNormalized: stone-prd-host1
            values.clusterDir: stone-prd-host1
          - nameNormalized: stone-stg-host
            values.clusterDir: stone-stg-host
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: ingresscontroller-{{nameNormalized}}
    spec:
      destination:
        namespace: openshift-ingress-operator
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=false
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: integration
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/integration
      - list:
          elements:
          - nameNormalized: kflux-ocp-p01
            values.clusterDir: kflux-ocp-p01
          - nameNormalized: stone-stage-p01
            values.clusterDir: stone-stage-p01
          - nameNormalized: stone-prod-p01
            values.clusterDir: stone-prod-p01
          - nameNormalized: stone-prod-p02
            values.clusterDir: stone-prod-p02
          - nameNormalized: kflux-prd-rh02
            values.clusterDir: kflux-prd-rh02
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: integration-{{nameNormalized}}
    spec:
      destination:
        namespace: integration-service
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: internal-services
  namespace: openshift-gitops
spec:
  generators:
  - clusters:
      selector:
        matchLabels:
          appstudio.redhat.com/member-cluster: "true"
  template:
    metadata:
      name: internal-services-{{nameNormalized}}
    spec:
      destination:
        namespace: internal-services
        server: '{{server}}'
      project: default
      source:
        path: components/internal-services
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: jvm-build-service
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/jvm-build-service
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: jvm-build-service-{{nameNormalized}}
    spec:
      destination:
        namespace: default
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: knative-eventing
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/knative-eventing
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: knative-eventing-{{nameNormalized}}
    spec:
      destination:
        namespace: knative-eventing
        server: '{{server}}'
      ignoreDifferences:
      - group: rbac.authorization.k8s.io
        jsonPointers:
        - /rules
        kind: ClusterRole
        name: addressable-resolver
      - group: rbac.authorization.k8s.io
        jsonPointers:
        - /rules
        kind: ClusterRole
        name: channelable-manipulator
      - group: rbac.authorization.k8s.io
        jsonPointers:
        - /rules
        kind: ClusterRole
        name: crossnamespace-subscriber
      - group: rbac.authorization.k8s.io
        jsonPointers:
        - /rules
        kind: ClusterRole
        name: podspecable-binding
      - group: rbac.authorization.k8s.io
        jsonPointers:
        - /rules
        kind: ClusterRole
        name: source-observer
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
        - RespectIgnoreDifferences=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: kubearchive
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/kubearchive
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: kubearchive-{{nameNormalized}}
    spec:
      destination:
        namespace: product-kubearchive
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: mintmaker
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/mintmaker
      - list:
          elements:
          - nameNormalized: kflux-ocp-p01
            values.clusterDir: kflux-ocp-p01
          - nameNormalized: stone-stage-p01
            values.clusterDir: stone-stage-p01
          - nameNormalized: stone-prod-p01
            values.clusterDir: stone-prod-p01
          - nameNormalized: stone-prod-p02
            values.clusterDir: stone-prod-p02
          - nameNormalized: kflux-prd-rh02
            values.clusterDir: kflux-prd-rh02
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: mintmaker-{{nameNormalized}}
    spec:
      destination:
        namespace: mintmaker
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: monitoring-workload-grafana
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: NotIn
              values:
              - argocd-default-cluster-config
            - key: clustertemplateinstance.openshift.io/name
              operator: DoesNotExist
            matchLabels:
              argocd.argoproj.io/secret-type: cluster
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/monitoring/grafana
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: monitoring-workload-grafana-{{nameNormalized}}
    spec:
      destination:
        namespace: appstudio-grafana
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: monitoring-workload-prometheus
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: NotIn
              values:
              - argocd-default-cluster-config
            - key: clustertemplateinstance.openshift.io/name
              operator: DoesNotExist
            matchLabels:
              argocd.argoproj.io/secret-type: cluster
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/monitoring/prometheus
      - list:
          elements:
          - nameNormalized: kflux-ocp-p01
            values.clusterDir: kflux-ocp-p01
          - nameNormalized: stone-stg-host
            values.clusterDir: stone-stg-host
          - nameNormalized: stone-stg-rh01
            values.clusterDir: stone-stg-rh01
          - nameNormalized: stone-prd-host1
            values.clusterDir: stone-prd-host1
          - nameNormalized: stone-prd-m01
            values.clusterDir: stone-prd-m01
          - nameNormalized: stone-prd-rh01
            values.clusterDir: stone-prd-rh01
          - nameNormalized: stone-stage-p01
            values.clusterDir: stone-stage-p01
          - nameNormalized: stone-prod-p01
            values.clusterDir: stone-prod-p01
          - nameNormalized: stone-prod-p02
            values.clusterDir: stone-prod-p02
          - nameNormalized: kflux-prd-rh02
            values.clusterDir: kflux-prd-rh02
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: monitoring-workload-prometheus-{{nameNormalized}}
    spec:
      destination:
        namespace: appstudio-workload-monitoring
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: multi-platform-controller
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/multi-platform-controller
      - list:
          elements:
          - nameNormalized: kflux-ocp-p01
            values.clusterDir: kflux-ocp-p01
          - nameNormalized: stone-prod-p01
            values.clusterDir: stone-prod-p01
          - nameNormalized: stone-prod-p02
            values.clusterDir: stone-prod-p02
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: multi-platform-controller-{{nameNormalized}}
    spec:
      destination:
        namespace: default
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: perf-team-prometheus-reader
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: staging
            sourceRoot: components/perf-team-prometheus-reader
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: perf-team-prometheus-reader-{{nameNormalized}}
    spec:
      destination:
        namespace: perf-team-prometheus-reader
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: pipeline-service
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/pipeline-service
      - list:
          elements:
          - nameNormalized: kflux-ocp-p01
            values.clusterDir: kflux-ocp-p01
          - nameNormalized: stone-stg-rh01
            values.clusterDir: stone-stg-rh01
          - nameNormalized: stone-prd-m01
            values.clusterDir: stone-prd-m01
          - nameNormalized: stone-prd-rh01
            values.clusterDir: stone-prd-rh01
          - nameNormalized: stone-stage-p01
            values.clusterDir: stone-stage-p01
          - nameNormalized: stone-prod-p01
            values.clusterDir: stone-prod-p01
          - nameNormalized: stone-prod-p02
            values.clusterDir: stone-prod-p02
          - nameNormalized: kflux-prd-rh02
            values.clusterDir: kflux-prd-rh02
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: pipeline-service-{{nameNormalized}}
    spec:
      destination:
        namespace: default
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: power-monitoring
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: NotIn
              values:
              - argocd-default-cluster-config
            - key: clustertemplateinstance.openshift.io/name
              operator: DoesNotExist
            matchLabels:
              argocd.argoproj.io/secret-type: cluster
          values:
            clusterDir: ""
            environment: ""
            sourceRoot: components/power-monitoring
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: power-monitoring-{{nameNormalized}}
    spec:
      destination:
        namespace: power-monitoring
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: project-controller
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/project-controller
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: project-controller-{{nameNormalized}}
    spec:
      destination:
        namespace: project-controller
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: release
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/release
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: release-{{nameNormalized}}
    spec:
      destination:
        namespace: release-service
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: repository-validator
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/internal-member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/repository-validator
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: repository-validator-{{nameNormalized}}
    spec:
      destination:
        namespace: repository-validator
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=false
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: spacerequest-cleaner
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/spacerequest-cleaner
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: spacerequest-cleaner-{{nameNormalized}}
    spec:
      destination:
        namespace: spacerequest-cleaner
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 15s
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: tempo
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/tracing/tempo
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: tempo-{{nameNormalized}}
    spec:
      destination:
        namespace: tempo-operator
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  labels:
    noSourceTransform: "true"
  name: tracing-workload-otel-collector
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/tracing/otel-collector
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: tracing-workload-otel-collector-{{nameNormalized}}
    spec:
      destination:
        namespace: konflux-otel
        server: '{{server}}'
      project: default
      sources:
      - chart: opentelemetry-collector
        helm:
          parameters:
          - name: image.repository
            value: quay.io/factory2/otel-collector-sp/otel-binary-image
          - name: mode
            value: deployment
          - name: fullnameOverride
            value: open-telemetry-opentelemetry-collector
          valueFiles:
          - $values/{{values.sourceRoot}}/{{values.environment}}/otel-collector-helm-values.yaml
        repoURL: https://open-telemetry.github.io/opentelemetry-helm-charts
        targetRevision: 0.101.2
      - ref: values
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: tracing-workload-tracing
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: development
            sourceRoot: components/tracing/otel-collector
      - list:
          elements: []
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: tracing-workload-tracing-{{nameNormalized}}
    spec:
      destination:
        namespace: konflux-otel
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: 50
        syncOptions:
        - CreateNamespace=true
---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: workspaces-member
  namespace: openshift-gitops
spec:
  generators:
  - merge:
      generators:
      - clusters:
          selector:
            matchLabels:
              appstudio.redhat.com/member-cluster: "true"
          values:
            clusterDir: ""
            environment: staging
            sourceRoot: components/workspaces
      - list:
          elements:
          - nameNormalized: stone-stg-rh01
            values.clusterDir: stone-stg-rh01
      mergeKeys:
      - nameNormalized
  template:
    metadata:
      name: workspaces-{{nameNormalized}}
    spec:
      destination:
        namespace: workspaces-system
        server: '{{server}}'
      project: default
      source:
        path: '{{values.sourceRoot}}/{{values.environment}}/{{values.clusterDir}}'
        repoURL: https://github.com/redhat-appstudio/infra-deployments.git
        targetRevision: main
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
          limit: -1
        syncOptions:
        - CreateNamespace=false
