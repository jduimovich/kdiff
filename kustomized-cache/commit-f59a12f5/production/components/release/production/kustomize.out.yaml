apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: release-service
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: releaseplanadmissions.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ReleasePlanAdmission
    listKind: ReleasePlanAdmissionList
    plural: releaseplanadmissions
    shortNames:
    - rpa
    singular: releaseplanadmission
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.environment
      name: Environment
      type: string
    - jsonPath: .spec.origin
      name: Origin
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReleasePlanAdmission is the Schema for the ReleasePlanAdmissions
          API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleasePlanAdmissionSpec defines the desired state of ReleasePlanAdmission.
            properties:
              applications:
                description: Applications is a list of references to applications
                  to be released in the managed namespace
                items:
                  type: string
                type: array
              collectors:
                description: Collectors is a list of data collectors to be executed
                  as part of the release process
                items:
                  description: Collector represents a reference to a Collector to
                    be executed as part of the release workflow.
                  properties:
                    name:
                      description: Name of the collector
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    params:
                      description: Params is a slice of parameters for a given collector
                      items:
                        description: Param represents a parameter for a collector
                        properties:
                          name:
                            description: Name is the name of the parameter
                            type: string
                          value:
                            description: Value is the value of the parameter
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    timeout:
                      description: Timeout in seconds for the collector to execute
                      type: integer
                    type:
                      description: Type is the type of collector to be used
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  - params
                  - type
                  type: object
                type: array
              data:
                description: Data is an unstructured key used for providing data for
                  the managed Release Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              environment:
                description: Environment defines which Environment will be used to
                  release the Application
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              origin:
                description: Origin references where the release requests should come
                  from
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              pipeline:
                description: Pipeline contains all the information about the managed
                  Pipeline
                properties:
                  pipelineRef:
                    description: PipelineRef is the reference to the Pipeline
                    properties:
                      params:
                        description: Params is a slice of parameters for a given resolver
                        items:
                          description: Param defines the parameters for a given resolver
                            in PipelineRef
                          properties:
                            name:
                              description: Name is the name of the parameter
                              type: string
                            value:
                              description: Value is the value of the parameter
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      resolver:
                        description: Resolver is the name of a Tekton resolver to
                          be used (e.g. git)
                        type: string
                    required:
                    - params
                    - resolver
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName is the ServiceAccount to use during
                      the execution of the Pipeline
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  timeouts:
                    description: Timeouts defines the different Timeouts to use in
                      the PipelineRun execution
                    properties:
                      finally:
                        description: Finally sets the maximum allowed duration of
                          this pipeline's finally
                        type: string
                      pipeline:
                        description: Pipeline sets the maximum allowed duration for
                          execution of the entire pipeline. The sum of individual
                          timeouts for tasks and finally must not exceed this value.
                        type: string
                      tasks:
                        description: Tasks sets the maximum allowed duration of this
                          pipeline's tasks
                        type: string
                    type: object
                required:
                - pipelineRef
                type: object
              policy:
                description: Policy to validate before releasing an artifact
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
            required:
            - applications
            - origin
            - policy
            type: object
          status:
            description: ReleasePlanAdmissionStatus defines the observed state of
              ReleasePlanAdmission.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  for the releasePlanAdmission
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              releasePlans:
                description: ReleasePlan is a list of releasePlans matched to the
                  ReleasePlanAdmission
                items:
                  description: MatchedReleasePlan defines the relevant information
                    for a matched ReleasePlan.
                  properties:
                    active:
                      description: Active indicates whether the ReleasePlan is set
                        to auto-release or not
                      type: boolean
                    name:
                      description: Name contains the namespaced name of the ReleasePlan
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: releaseplans.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ReleasePlan
    listKind: ReleasePlanList
    plural: releaseplans
    shortNames:
    - rp
    singular: releaseplan
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    - jsonPath: .spec.target
      name: Target
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReleasePlan is the Schema for the ReleasePlans API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleasePlanSpec defines the desired state of ReleasePlan.
            properties:
              application:
                description: Application is a reference to the application to be released
                  in the managed namespace
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              collectors:
                description: Collectors is a list of data collectors to be executed
                  as part of the release process
                items:
                  description: Collector represents a reference to a Collector to
                    be executed as part of the release workflow.
                  properties:
                    name:
                      description: Name of the collector
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    params:
                      description: Params is a slice of parameters for a given collector
                      items:
                        description: Param represents a parameter for a collector
                        properties:
                          name:
                            description: Name is the name of the parameter
                            type: string
                          value:
                            description: Value is the value of the parameter
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    timeout:
                      description: Timeout in seconds for the collector to execute
                      type: integer
                    type:
                      description: Type is the type of collector to be used
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                  required:
                  - name
                  - params
                  - type
                  type: object
                type: array
              data:
                description: Data is an unstructured key used for providing data for
                  the managed Release Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              finalPipeline:
                description: FinalPipeline contains all the information about the
                  final Pipeline
                properties:
                  params:
                    description: Params is a slice of parameters for a given resolver
                    items:
                      description: Param defines the parameters for a given resolver
                        in PipelineRef
                      properties:
                        name:
                          description: Name is the name of the parameter
                          type: string
                        value:
                          description: Value is the value of the parameter
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  pipelineRef:
                    description: PipelineRef is the reference to the Pipeline
                    properties:
                      params:
                        description: Params is a slice of parameters for a given resolver
                        items:
                          description: Param defines the parameters for a given resolver
                            in PipelineRef
                          properties:
                            name:
                              description: Name is the name of the parameter
                              type: string
                            value:
                              description: Value is the value of the parameter
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      resolver:
                        description: Resolver is the name of a Tekton resolver to
                          be used (e.g. git)
                        type: string
                    required:
                    - params
                    - resolver
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName is the ServiceAccount to use during
                      the execution of the Pipeline
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  timeouts:
                    description: Timeouts defines the different Timeouts to use in
                      the PipelineRun execution
                    properties:
                      finally:
                        description: Finally sets the maximum allowed duration of
                          this pipeline's finally
                        type: string
                      pipeline:
                        description: Pipeline sets the maximum allowed duration for
                          execution of the entire pipeline. The sum of individual
                          timeouts for tasks and finally must not exceed this value.
                        type: string
                      tasks:
                        description: Tasks sets the maximum allowed duration of this
                          pipeline's tasks
                        type: string
                    type: object
                required:
                - pipelineRef
                type: object
              releaseGracePeriodDays:
                default: 7
                description: |-
                  ReleaseGracePeriodDays is the number of days a Release should be kept
                  This value is used to define the Release ExpirationTime
                type: integer
              target:
                description: Target references where to send the release requests
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              tenantPipeline:
                description: TenantPipeline contains all the information about the
                  tenant Pipeline
                properties:
                  params:
                    description: Params is a slice of parameters for a given resolver
                    items:
                      description: Param defines the parameters for a given resolver
                        in PipelineRef
                      properties:
                        name:
                          description: Name is the name of the parameter
                          type: string
                        value:
                          description: Value is the value of the parameter
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  pipelineRef:
                    description: PipelineRef is the reference to the Pipeline
                    properties:
                      params:
                        description: Params is a slice of parameters for a given resolver
                        items:
                          description: Param defines the parameters for a given resolver
                            in PipelineRef
                          properties:
                            name:
                              description: Name is the name of the parameter
                              type: string
                            value:
                              description: Value is the value of the parameter
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      resolver:
                        description: Resolver is the name of a Tekton resolver to
                          be used (e.g. git)
                        type: string
                    required:
                    - params
                    - resolver
                    type: object
                  serviceAccountName:
                    description: ServiceAccountName is the ServiceAccount to use during
                      the execution of the Pipeline
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  timeouts:
                    description: Timeouts defines the different Timeouts to use in
                      the PipelineRun execution
                    properties:
                      finally:
                        description: Finally sets the maximum allowed duration of
                          this pipeline's finally
                        type: string
                      pipeline:
                        description: Pipeline sets the maximum allowed duration for
                          execution of the entire pipeline. The sum of individual
                          timeouts for tasks and finally must not exceed this value.
                        type: string
                      tasks:
                        description: Tasks sets the maximum allowed duration of this
                          pipeline's tasks
                        type: string
                    type: object
                required:
                - pipelineRef
                type: object
            required:
            - application
            type: object
          status:
            description: ReleasePlanStatus defines the observed state of ReleasePlan.
            properties:
              conditions:
                description: Conditions represent the latest available observations
                  for the releasePlan
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              releasePlanAdmission:
                description: |-
                  ReleasePlanAdmission contains the information of the releasePlanAdmission this ReleasePlan is
                  matched to
                properties:
                  active:
                    description: Active indicates whether the ReleasePlanAdmission
                      is set to auto-release or not
                    type: boolean
                  name:
                    description: Name contains the namespaced name of the releasePlanAdmission
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: releases.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: Release
    listKind: ReleaseList
    plural: releases
    shortNames:
    - rel
    singular: release
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.snapshot
      name: Snapshot
      type: string
    - jsonPath: .spec.releasePlan
      name: ReleasePlan
      type: string
    - jsonPath: .status.conditions[?(@.type=="Released")].reason
      name: Release status
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Release is the Schema for the releases API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseSpec defines the desired state of Release.
            properties:
              data:
                description: Data is an unstructured key used for providing data for
                  the managed Release Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              gracePeriodDays:
                description: |-
                  GracePeriodDays is the number of days a Release should be kept
                  This value is used to define the Release ExpirationTime
                type: integer
              releasePlan:
                description: ReleasePlan to use for this particular Release
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              snapshot:
                description: Snapshot to be released
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
            required:
            - releasePlan
            - snapshot
            type: object
          status:
            description: ReleaseStatus defines the observed state of Release.
            properties:
              artifacts:
                description: Artifacts is an unstructured key used for storing all
                  the artifacts generated by the managed Release Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              attribution:
                description: Attribution contains information about the entity authorizing
                  the release
                properties:
                  author:
                    description: Author is the username that the release is attributed
                      to
                    type: string
                  standingAuthorization:
                    description: StandingAuthorization indicates whether the release
                      is attributed through a ReleasePlan
                    type: boolean
                type: object
              automated:
                description: Automated indicates whether the Release was created as
                  part of an automated process or manually by an end-user
                type: boolean
              collectors:
                description: Collectors is an unstructured key used for storing all
                  the collectors results generated by the Collectors Pipeline
                type: object
                x-kubernetes-preserve-unknown-fields: true
              completionTime:
                description: CompletionTime is the time when a Release was completed
                format: date-time
                type: string
              conditions:
                description: Conditions represent the latest available observations
                  for the release
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource.\n---\nThis struct is intended for
                    direct use as an array at the field path .status.conditions.  For
                    example,\n\n\n\ttype FooStatus struct{\n\t    // Represents the
                    observations of a foo's current state.\n\t    // Known .status.conditions.type
                    are: \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                    +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    // +listType=map\n\t
                    \   // +listMapKey=type\n\t    Conditions []metav1.Condition `json:\"conditions,omitempty\"
                    patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                    \   // other fields\n\t}"
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        ---
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                        useful (see .node.status.conditions), the ability to deconflict is important.
                        The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              expirationTime:
                description: ExpirationTime is the time when a Release can be purged
                format: date-time
                type: string
              finalProcessing:
                description: FinalProcessing contains information about the release
                  final processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the managed
                      Release PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  roleBinding:
                    description: |-
                      RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun
                      executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              managedProcessing:
                description: ManagedProcessing contains information about the release
                  managed processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the managed
                      Release PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  roleBinding:
                    description: |-
                      RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun
                      executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              startTime:
                description: StartTime is the time when a Release started
                format: date-time
                type: string
              target:
                description: Target references where this release is intended to be
                  released to
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              tenantProcessing:
                description: TenantProcessing contains information about the release
                  tenant processing
                properties:
                  completionTime:
                    description: CompletionTime is the time when the Release processing
                      was completed
                    format: date-time
                    type: string
                  pipelineRun:
                    description: PipelineRun contains the namespaced name of the managed
                      Release PipelineRun executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  roleBinding:
                    description: |-
                      RoleBinding contains the namespaced name of the roleBinding created for the managed Release PipelineRun
                      executed as part of this release
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?\/[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  startTime:
                    description: StartTime is the time when the Release processing
                      started
                    format: date-time
                    type: string
                type: object
              validation:
                description: Validation contains information about the release validation
                properties:
                  failedPostValidation:
                    description: FailedPostValidation indicates whether the Release
                      was marked as invalid after being initially marked as valid
                    type: boolean
                  time:
                    description: Time is the time when the Release was validated or
                      when the validation state changed
                    format: date-time
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.14.0
  name: releaseserviceconfigs.appstudio.redhat.com
spec:
  group: appstudio.redhat.com
  names:
    kind: ReleaseServiceConfig
    listKind: ReleaseServiceConfigList
    plural: releaseserviceconfigs
    shortNames:
    - rsc
    singular: releaseserviceconfig
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ReleaseServiceConfig is the Schema for the releaseserviceconfigs
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ReleaseServiceConfigSpec defines the desired state of ReleaseServiceConfig.
            properties:
              debug:
                description: |-
                  Debug is the boolean that specifies whether or not the Release Service should run
                  in debug mode
                type: boolean
              defaultTimeouts:
                description: |-
                  DefaultTimeouts contain the default Tekton timeouts to be used in case they are
                  not specified in the ReleasePlanAdmission resource.
                properties:
                  finally:
                    description: Finally sets the maximum allowed duration of this
                      pipeline's finally
                    type: string
                  pipeline:
                    description: Pipeline sets the maximum allowed duration for execution
                      of the entire pipeline. The sum of individual timeouts for tasks
                      and finally must not exceed this value.
                    type: string
                  tasks:
                    description: Tasks sets the maximum allowed duration of this pipeline's
                      tasks
                    type: string
                type: object
            type: object
          status:
            description: ReleaseServiceConfigStatus defines the observed state of
              ReleaseServiceConfig.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-service-metrics-reader
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-service-configurator
  namespace: release-service
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseserviceconfigs
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: release-service-leader-election-role
  namespace: release-service
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-manager-for-release
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - patch
  - get
  - list
  - create
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-pipeline-resource-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  - releaseplans
  - releaseplanadmissions
  - snapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - internalrequests
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - create
  - delete
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: release-service-application-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: release-service-component-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-environment-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-manager-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - enterprisecontractpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - enterprisecontractpolicies/status
  verbs:
  - get
- apiGroups:
  - appstudio.redhat.com
  resources:
  - internalrequests
  verbs:
  - create
  - delete
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplanadmissions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplanadmissions/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplansadmissions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseserviceconfigs
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-prometheus-viewer-role
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: release-service-release-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: release-service-release-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: release-service-releaseplan-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: release-service-releaseplan-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-admin: "true"
    rbac.authorization.k8s.io/aggregate-to-edit: "true"
  name: release-service-releaseplanadmission-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplanadmissions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplanadmissions/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    rbac.authorization.k8s.io/aggregate-to-view: "true"
  name: release-service-releaseplanadmission-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplanadmissions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplanadmissions/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-snapshot-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-snapshot-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-snapshotenvironmentbinding-editor-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshotenvironmentbindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshotenvironmentbindings/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: release-service-tekton-role
rules:
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggers
  - triggertemplates
  verbs:
  - create
  - update
  - patch
  - delete
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - create
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - create
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: releaseserviceconfig-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseserviceconfigs
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grant-argocd
  namespace: release-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-service-configurators
  namespace: release-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-service-configurator
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-release-team
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-service-leader-election-rolebinding
  namespace: release-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-service-leader-election-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-service-maintainers
  namespace: release-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: component-maintainer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-release-team
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: releaseserviceconfigs-rolebinding
  namespace: release-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: releaseserviceconfig-role
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: system:serviceaccounts
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grant-argocd-crd-permissions-for-release
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-manager-for-release
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-application-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-application-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-component-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-component-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-environment-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-environment-viewer-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-manager-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-prometheus-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-prometheus-viewer-role
subjects:
- kind: ServiceAccount
  name: release-service-metrics-reader
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-proxy-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-release-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-release-viewer-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-releaseplan-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-releaseplan-viewer-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-releaseplanadmission-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-releaseplanadmission-viewer-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-snapshot-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-snapshot-editor-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-snapshotenvironmentbinding-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-snapshotenvironmentbinding-editor-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: release-service-tekton-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: release-service-tekton-role
subjects:
- kind: ServiceAccount
  name: release-service-controller-manager
  namespace: release-service
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f3d4c01a.redhat.com
kind: ConfigMap
metadata:
  name: release-service-manager-config
  namespace: release-service
---
apiVersion: v1
data:
  DEFAULT_RELEASE_PVC: ""
  DEFAULT_RELEASE_WORKSPACE_NAME: ""
  DEFAULT_RELEASE_WORKSPACE_SIZE: ""
kind: ConfigMap
metadata:
  name: release-service-manager-properties
  namespace: release-service
---
apiVersion: v1
data:
  server-config.yaml: |
    ---
    service:
      listen_port: 8080
      pool_interval: 120
      metrics_prefix: release_service
    checks:
      git:
        - name: github
          url: https://github.com/konflux-ci/release-service-catalog
          revision: production
          path: pipelines/fbc-release/fbc-release.yaml
      quay:
        - name: quayio
          tags:
            - latest
          pullspec: quay.io/konflux-ci/release-service-utils
      http:
        - name: pyxis
          url: https://pyxis.api.redhat.com/v1/ping
          insecure: true
kind: ConfigMap
metadata:
  name: release-service-monitor-config
  namespace: release-service
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: release-service-metrics-reader
  name: release-service-metrics-reader
  namespace: release-service
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: release-service-controller-manager-metrics-service
  namespace: release-service
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: release-service-monitor-app
  name: release-service-monitor-service
  namespace: release-service
spec:
  ports:
  - name: metricshttp
    port: 8080
    protocol: TCP
    targetPort: 8080
  selector:
    app: release-service-monitor-app
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
  name: release-service-webhook-service
  namespace: release-service
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: release-service-controller-manager
  namespace: release-service
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: DEFAULT_RELEASE_PVC
          valueFrom:
            configMapKeyRef:
              key: DEFAULT_RELEASE_PVC
              name: release-service-manager-properties
              optional: true
        - name: DEFAULT_RELEASE_WORKSPACE_NAME
          valueFrom:
            configMapKeyRef:
              key: DEFAULT_RELEASE_WORKSPACE_NAME
              name: release-service-manager-properties
              optional: true
        - name: DEFAULT_RELEASE_WORKSPACE_SIZE
          valueFrom:
            configMapKeyRef:
              key: DEFAULT_RELEASE_WORKSPACE_SIZE
              name: release-service-manager-properties
              optional: true
        - name: SERVICE_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: quay.io/konflux-ci/release-service:e94df330de52919fd7d77cf41df2f5cca0adb4f5
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 8192Mi
          requests:
            cpu: 100m
            memory: 8192Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --http2-disable
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: release-service-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-service-monitor-deployment
  namespace: release-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: release-service-monitor-app
  template:
    metadata:
      labels:
        app: release-service-monitor-app
    spec:
      containers:
      - command:
        - /bin/metrics-server
        - /config/server-config.yaml
        env:
        - name: HOME
          value: /var/tmp
        - name: TMPDIR
          value: /var/tmp
        image: quay.io/konflux-ci/release-service-monitor:73e63a3db71ab5084150b31277710aabff613b03
        name: release-service-monitor
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 10m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /config
          name: config
          readOnly: true
        - mountPath: /var/tmp
          name: temp-directory
      volumes:
      - configMap:
          items:
          - key: server-config.yaml
            path: server-config.yaml
          name: release-service-monitor-config
        name: config
      - emptyDir: {}
        name: temp-directory
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cleanup-timed-out-pipelineruns-internal-requests
  namespace: release-service
spec:
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - "set -o pipefail\nPATH=\"/bin:/usr/bin:/usr/local/bin\"\nMAX_PROCS=5\nINTERNAL_REQUESTS_FILE=\"/var/tmp/internal-requests-to-be-deleted\"\nKUBECTL_OUTPUT=$(mktemp
              -p /var/tmp)\nYD=$(date -d 'yesterday' +%s)\nkubectl get internalrequests
              --all-namespaces \\\n--sort-by=.status.completionTime \\\n--template
              '{{range .items}}{{.metadata.name}}{{\"\\t\"}}{{.metadata.namespace}}{{\"\\t\"}}{{.status.completionTime}}{{\"\\n\"}}{{end}}'
              > $KUBECTL_OUTPUT\nawk -v yesterday=${YD} '{\n     # parsing the completionTime
              and converting it to epoch\n     # so we can compute the precise IRs
              that should be deleted\n     gsub(\"[:\\\\-TZ]\", \" \", $3)\n     t=mktime($3)\n
              \    completionTime=strftime(\"%s\", t)\n     #\n     # completionTime
              should be smaller than yesterday seconds so it can be deleted\n     if(yesterday
              > completionTime) {\n       args=\"%s:%s\\n\"\n       printf(args, $1,
              $2)\n     } \n  }' $KUBECTL_OUTPUT > $INTERNAL_REQUESTS_FILE\n\n# The
              deleteAndLog will run the CR deletion and save the operation in a structured
              way that        \n# can be read easily by kubectl or journalctl                                                           \nfunction
              deleteAndLog() {\n  ir=${1%:*}\n  namespace=${1#*:}\n  kubectl delete
              internalrequest $ir -n $namespace |while read logLine; do\n    echo
              \"INFO: namespace=${namespace} log=${logLine}\"\n  done                                                                                                  \n}
              \                                                                                                      \nexport
              -f deleteAndLog\nxargs -a ${INTERNAL_REQUESTS_FILE} -i -P ${MAX_PROCS}
              bash -c 'deleteAndLog \"{}\"'\n"
            image: quay.io/konflux-ci/release-service-utils:9089cafbf36bb889b4b73d8c2965613810f13736
            imagePullPolicy: IfNotPresent
            name: ir-cleanup
            resources:
              limits:
                cpu: 200m
                memory: 300Mi
              requests:
                cpu: 100m
                memory: 200Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - mountPath: /var/tmp
              name: temp-directory
          restartPolicy: Never
          serviceAccountName: release-service-controller-manager
          volumes:
          - emptyDir: {}
            name: temp-directory
  schedule: 10 03 * * *
  successfulJobsHistoryLimit: 3
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: remove-expired-releases
  namespace: release-service
spec:
  failedJobsHistoryLimit: 7
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /bin/bash
            - -c
            - "set -o pipefail\nPATH=\"/bin:/usr/bin:/usr/local/bin\"\nMAX_PROCS=5\nEXPIRED_RELEASES_FILE=\"/var/tmp/releases-to-be-deleted\"\nKUBECTL_OUTPUT=$(mktemp
              -p /var/tmp)\nNOW=$(date +%s)\nkubectl get release --all-namespaces
              \\\n--sort-by=.status.expirationTime \\\n--template '{{range .items}}{{.metadata.name}}{{\"\\t\"}}{{.metadata.namespace}}{{\"\\t\"}}{{.status.expirationTime}}{{\"\\n\"}}{{end}}'
              > $KUBECTL_OUTPUT\nawk -v now=${NOW} '{\n     # parsing the expirationTime
              and converting it to epoch\n     # so we can calculate easier the expired
              Releases\n     gsub(\"[:\\\\-TZ]\", \" \", $3)\n     t=mktime($3)\n
              \    expirationTime=strftime(\"%s\", t)\n     #\n     # expirationTime
              should be smaller than today in seconds so it can be deleted\n     if(now
              > expirationTime) {\n       args=\"%s:%s\\n\"\n       printf(args, $1,
              $2)\n     } \n  }' $KUBECTL_OUTPUT > $EXPIRED_RELEASES_FILE\n# The deleteAndLog
              will run the Release deletion and save the operation in a structured
              way that        \n# can be read easily by kubectl or journalctl                                                           \nfunction
              deleteAndLog() {\n  release=${1%:*}\n  namespace=${1#*:}\n  kubectl
              delete release $release -n $namespace |while read logLine; do\n    echo
              \"INFO: namespace=${namespace} log=${logLine}\"\n  done                                                                                                  \n}
              \                                                                                                      \nexport
              -f deleteAndLog\nxargs -a ${EXPIRED_RELEASES_FILE} -i -P ${MAX_PROCS}
              bash -c 'deleteAndLog \"{}\"'\n"
            image: quay.io/konflux-ci/release-service-utils:38c3bfd7479c86b832cba5b61f9bbde40c469393
            imagePullPolicy: IfNotPresent
            name: release-cleanup
            resources:
              limits:
                cpu: 200m
                memory: 1024Mi
              requests:
                cpu: 100m
                memory: 1024Mi
            securityContext:
              allowPrivilegeEscalation: false
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - mountPath: /var/tmp
              name: temp-directory
          restartPolicy: Never
          serviceAccountName: release-service-controller-manager
          volumes:
          - emptyDir: {}
            name: temp-directory
  schedule: 10 03 * * *
  successfulJobsHistoryLimit: 7
---
apiVersion: appstudio.redhat.com/v1alpha1
kind: ReleaseServiceConfig
metadata:
  name: release-service-config
  namespace: release-service
spec:
  debug: false
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/created-by: release-service
    app.kubernetes.io/instance: controller-manager-metrics-monitor
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: servicemonitor
    app.kubernetes.io/part-of: release-service
    control-plane: controller-manager
  name: release-service-controller-manager-metrics-monitor
  namespace: release-service
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: release-service-metrics-reader
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app: release-service-monitor-app
  name: release-service-monitor
  namespace: release-service
spec:
  endpoints:
  - path: /metrics
    port: metricshttp
    scheme: http
  selector:
    matchLabels:
      app: release-service-monitor-app
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: release-service-egress-controller-manager
  namespace: release-service
spec:
  egress:
  - ports:
    - port: 6443
      protocol: TCP
    to:
    - namespaceSelector: {}
      podSelector:
        matchLabels:
          apiserver: "true"
          app: openshift-kube-apiserver
  - ports:
    - port: 6443
      protocol: TCP
    - port: 443
      protocol: TCP
    to:
    - ipBlock:
        cidr: 172.20.0.1/32
  podSelector:
    matchLabels:
      control-plane: controller-manager
  policyTypes:
  - Egress
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  name: release-service-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /mutate-appstudio-redhat-com-v1alpha1-author
  failurePolicy: Fail
  name: mauthor.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - releases
    - releaseplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /mutate-appstudio-redhat-com-v1alpha1-release
  failurePolicy: Fail
  name: mrelease.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - releases
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /mutate-appstudio-redhat-com-v1alpha1-releaseplan
  failurePolicy: Fail
  name: mreleaseplan.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - releaseplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /mutate-appstudio-redhat-com-v1alpha1-releaseplanadmission
  failurePolicy: Fail
  name: mreleaseplanadmission.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    resources:
    - releaseplanadmissions
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  name: release-service-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /validate-appstudio-redhat-com-v1alpha1-release
  failurePolicy: Fail
  name: vrelease.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - releases
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /validate-appstudio-redhat-com-v1alpha1-releaseplan
  failurePolicy: Fail
  name: vreleaseplan.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - releaseplans
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: release-service-webhook-service
      namespace: release-service
      path: /validate-appstudio-redhat-com-v1alpha1-releaseplanadmission
  failurePolicy: Fail
  name: vreleaseplanadmission.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - releaseplanadmissions
  sideEffects: None
