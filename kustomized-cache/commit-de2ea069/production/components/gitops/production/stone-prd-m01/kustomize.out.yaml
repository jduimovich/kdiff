apiVersion: v1
kind: Namespace
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops
---
apiVersion: v1
kind: Namespace
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-argocd
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    controller-gen.kubebuilder.io/version: v0.12.1
  name: gitopsdeploymentmanagedenvironments.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeploymentManagedEnvironment
    listKind: GitOpsDeploymentManagedEnvironmentList
    plural: gitopsdeploymentmanagedenvironments
    singular: gitopsdeploymentmanagedenvironment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsDeploymentManagedEnvironment is the Schema for the gitopsdeploymentmanagedenvironments
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: The GitOpsDeploymentManagedEnvironment CR describes a remote
              cluster which the GitOps Service will deploy to, via Argo CD. This resource
              references a Secret resource, of type managed-gitops.redhat.com/managed-environment,
              that contains the cluster credentials. The Secret should contain credentials
              to a ServiceAccount/User account on the target cluster. This is referred
              to as the Argo CD 'ServiceAccount' below.
            properties:
              allowInsecureSkipTLSVerify:
                description: 'AllowInsecureSkipTLSVerify controls whether Argo CD
                  will accept a Kubernetes API URL with untrusted-TLS certificate.
                  Optional: If true, the GitOps Service will allow Argo CD to connect
                  to the specified cluster even if it is using an invalid or self-signed
                  TLS certificate. Defaults to false.'
                type: boolean
              apiURL:
                description: APIURL is the URL of the cluster to connect to
                type: string
              clusterResources:
                description: "ClusterResources is used in conjuction with the Namespace
                  field. If the .spec.namespaces field is non-empty, this field will
                  be used to determine whether Argo CD should attempt to manage cluster-scoped
                  resources. - If .spec.namespaces field is empty, this field is ignored.
                  - If you are familiar with Argo CD: this field is equivalent to
                  the field of the same name in the Argo CD Cluster Secret. \n Optional,
                  default to false."
                type: boolean
              createNewServiceAccount:
                description: "CreateNewServiceAccount controls whether Argo CD will
                  use the ServiceAccount provided by the user in the Secret, or if
                  a new ServiceAccount should be created. \n Optional, default to
                  false. \n - If true, the GitOps Service will automatically create
                  a ServiceAccount/ClusterRole/ClusterRoleBinding on the target cluster,
                  using the credentials provided by the user in the secret. - Argo
                  CD will then be configured to deploy with that new ServiceAccount.
                  \n - Default: If false, it is assumed that the credentials provided
                  by the user in the Secret are for a ServiceAccount on the cluster,
                  and Argo CD will be configred to use the ServiceAccount referenced
                  by the Secret of the user. No new ServiceAccount will be created.
                  - This should be used, for example, when the ServiceAccount Argo
                  CD does not have full cluster access (*/*/* at cluster scope)"
                type: boolean
              credentialsSecret:
                description: ClusterCredentialsSecret is a reference to a Secret that
                  contains cluster connection details. The cluster details should
                  be in the form of a kubeconfig file.
                type: string
              namespaces:
                description: "Namespaces allows one to indicate which Namespaces the
                  Secret's ServiceAccount has access to. \n Optional, defaults to
                  empty. If empty, it is assumed that the ServiceAccount has access
                  to all Namespaces. \n The ServiceAccount that GitOps Service/Argo
                  CD uses to deploy may not have access to all of the Namespaces on
                  a cluster. If not specified, it is assumed that the Argo CD ServiceAccount
                  has read/write at cluster-scope. - If you are familiar with Argo
                  CD: this field is equivalent to the field of the same name in the
                  Argo CD Cluster Secret."
                items:
                  type: string
                type: array
            required:
            - allowInsecureSkipTLSVerify
            - apiURL
            - credentialsSecret
            type: object
          status:
            description: GitOpsDeploymentManagedEnvironmentStatus defines the observed
              state of GitOpsDeploymentManagedEnvironment
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    controller-gen.kubebuilder.io/version: v0.12.1
  name: gitopsdeploymentrepositorycredentials.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeploymentRepositoryCredential
    listKind: GitOpsDeploymentRepositoryCredentialList
    plural: gitopsdeploymentrepositorycredentials
    singular: gitopsdeploymentrepositorycredential
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsDeploymentRepositoryCredential is the Schema for the gitopsdeploymentrepositorycredentials
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsDeploymentRepositoryCredentialSpec defines the desired
              state of GitOpsDeploymentRepositoryCredential
            properties:
              repository:
                description: Repository (HTTPS url, or SSH string) for accessing the
                  Git repo Required field As of this writing (Mar 2022), we only support
                  HTTPS URL
                type: string
              secret:
                description: Reference to a K8s Secret in the namespace that contains
                  repository credentials (Git username/password, as of this writing)
                  Required field
                type: string
            required:
            - repository
            - secret
            type: object
          status:
            description: GitOpsDeploymentRepositoryCredentialStatus defines the observed
              state of GitOpsDeploymentRepositoryCredential
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    controller-gen.kubebuilder.io/version: v0.12.1
  name: gitopsdeployments.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeployment
    listKind: GitOpsDeploymentList
    plural: gitopsdeployments
    singular: gitopsdeployment
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.sync.status
      name: Sync Status
      type: string
    - jsonPath: .status.health.status
      name: Health Status
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsDeployment is the Schema for the gitopsdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsDeploymentSpec defines the desired state of GitOpsDeployment
            properties:
              destination:
                description: 'Destination is a reference to a target namespace/cluster
                  to deploy to. This field may be empty: if it is empty, it is assumed
                  that the destination is the same namespace as the GitOpsDeployment
                  CR.'
                properties:
                  environment:
                    type: string
                  namespace:
                    description: The namespace will only be set for namespace-scoped
                      resources that have not set a value for .metadata.namespace
                    type: string
                type: object
              source:
                description: ApplicationSource contains all required information about
                  the source of an application
                properties:
                  path:
                    description: Path is a directory path within the Git repository,
                      and is only valid for applications sourced from Git.
                    type: string
                  repoURL:
                    description: RepoURL is the URL to the repository (Git or Helm)
                      that contains the application manifests
                    type: string
                  targetRevision:
                    description: TargetRevision defines the revision of the source
                      to sync the application to. In case of Git, this can be commit,
                      tag, or branch. If omitted, will equal to HEAD. In case of Helm,
                      this is a semver tag for the Chart's version.
                    type: string
                required:
                - path
                - repoURL
                type: object
              syncPolicy:
                description: SyncPolicy controls when and how a sync will be performed.
                properties:
                  syncOptions:
                    description: Options allow you to specify whole app sync-options.
                      This option may be empty, if and when it is empty it is considered
                      that there are no SyncOptions present.
                    items:
                      type: string
                    type: array
                type: object
              type:
                description: "Two possible values: - Automated: whenever a new commit
                  occurs in the GitOps repository, or the Argo CD Application is out
                  of sync, Argo CD should be told to (re)synchronize. - Manual: Argo
                  CD should never be told to resynchronize. Instead, synchronize operations
                  will be triggered via GitOpsDeploymentSyncRun operations only. -
                  See `GitOpsDeploymentSpecType*` \n Note: This is somewhat of a placeholder
                  for more advanced logic that can be implemented in the future. For
                  an example of this type of logic, see the 'syncPolicy' field of
                  Argo CD Application."
                type: string
            required:
            - source
            - type
            type: object
          status:
            description: GitOpsDeploymentStatus defines the observed state of GitOpsDeployment
            properties:
              conditions:
                items:
                  description: GitOpsDeploymentCondition contains details about an
                    GitOpsDeployment condition, which is usually an error or warning
                  properties:
                    lastProbeTime:
                      description: LastProbeTime is the last time the condition was
                        observed.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: LastTransitionTime is the last time the condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: Message contains human-readable message indicating
                        details about the last condition.
                      type: string
                    reason:
                      description: Reason is a unique, one-word, CamelCase reason
                        for the condition's last transition.
                      type: string
                    status:
                      description: Status is the status of the condition.
                      type: string
                    type:
                      description: Type is a GitOpsDeployment condition type
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              health:
                description: Health contains information about the application's current
                  health status
                properties:
                  message:
                    description: Message is a human-readable informational message
                      describing the health status
                    type: string
                  status:
                    description: Status holds the status code of the application or
                      resource
                    type: string
                type: object
              operationState:
                description: OperationState contains information about any ongoing
                  operations, such as a sync
                properties:
                  finishedAt:
                    description: FinishedAt contains time of operation completion
                    format: date-time
                    type: string
                  message:
                    description: Message holds any pertinent messages when attempting
                      to perform operation (typically errors).
                    type: string
                  operation:
                    description: Operation is the original requested operation
                    properties:
                      info:
                        description: Info is a list of informational items for this
                          operation
                        items:
                          properties:
                            name:
                              type: string
                            value:
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      initiatedBy:
                        description: InitiatedBy contains information about who initiated
                          the operations
                        properties:
                          automated:
                            description: Automated is set to true if operation was
                              initiated automatically by the application controller.
                            type: boolean
                          username:
                            description: Username contains the name of a user who
                              started operation
                            type: string
                        type: object
                      retry:
                        description: Retry controls the strategy to apply if a sync
                          fails
                        properties:
                          backoff:
                            description: Backoff controls how to backoff on subsequent
                              retries of failed syncs
                            properties:
                              duration:
                                description: Duration is the amount to back off. Default
                                  unit is seconds, but could also be a duration (e.g.
                                  "2m", "1h")
                                type: string
                              factor:
                                description: Factor is a factor to multiply the base
                                  duration after each failed retry
                                format: int64
                                type: integer
                              maxDuration:
                                description: MaxDuration is the maximum amount of
                                  time allowed for the backoff strategy
                                type: string
                            type: object
                          limit:
                            description: Limit is the maximum number of attempts for
                              retrying a failed sync. If set to 0, no retries will
                              be performed.
                            format: int64
                            type: integer
                        type: object
                      sync:
                        description: Sync contains parameters for the operation
                        properties:
                          dryRun:
                            description: DryRun specifies to perform a `kubectl apply
                              --dry-run` without actually performing the sync
                            type: boolean
                          manifests:
                            description: Manifests is an optional field that overrides
                              sync source with a local directory for development
                            items:
                              type: string
                            type: array
                          prune:
                            description: Prune specifies to delete resources from
                              the cluster that are no longer tracked in git
                            type: boolean
                          resources:
                            description: Resources describes which resources shall
                              be part of the sync
                            items:
                              description: SyncOperationResource contains resources
                                to sync.
                              properties:
                                group:
                                  type: string
                                kind:
                                  type: string
                                name:
                                  type: string
                                namespace:
                                  type: string
                              required:
                              - kind
                              - name
                              type: object
                            type: array
                          revision:
                            description: Revision is the revision (Git) or chart version
                              (Helm) which to sync the application to If omitted,
                              will use the revision specified in app spec.
                            type: string
                          revisions:
                            description: Revisions is the list of revision (Git) or
                              chart version (Helm) which to sync each source in sources
                              field for the application to If omitted, will use the
                              revision specified in app spec.
                            items:
                              type: string
                            type: array
                          source:
                            description: Source overrides the source definition set
                              in the application. This is typically set in a Rollback
                              operation and is nil during a Sync operation
                            properties:
                              path:
                                description: Path is a directory path within the Git
                                  repository, and is only valid for applications sourced
                                  from Git.
                                type: string
                              repoURL:
                                description: RepoURL is the URL to the repository
                                  (Git or Helm) that contains the application manifests
                                type: string
                              targetRevision:
                                description: TargetRevision defines the revision of
                                  the source to sync the application to. In case of
                                  Git, this can be commit, tag, or branch. If omitted,
                                  will equal to HEAD. In case of Helm, this is a semver
                                  tag for the Chart's version.
                                type: string
                            required:
                            - path
                            - repoURL
                            type: object
                          sources:
                            description: Sources overrides the source definition set
                              in the application. This is typically set in a Rollback
                              operation and is nil during a Sync operation
                            items:
                              description: ApplicationSource contains all required
                                information about the source of an application
                              properties:
                                path:
                                  description: Path is a directory path within the
                                    Git repository, and is only valid for applications
                                    sourced from Git.
                                  type: string
                                repoURL:
                                  description: RepoURL is the URL to the repository
                                    (Git or Helm) that contains the application manifests
                                  type: string
                                targetRevision:
                                  description: TargetRevision defines the revision
                                    of the source to sync the application to. In case
                                    of Git, this can be commit, tag, or branch. If
                                    omitted, will equal to HEAD. In case of Helm,
                                    this is a semver tag for the Chart's version.
                                  type: string
                              required:
                              - path
                              - repoURL
                              type: object
                            type: array
                          syncOptions:
                            description: SyncOptions provide per-sync sync-options,
                              e.g. Validate=false
                            items:
                              type: string
                            type: array
                          syncStrategy:
                            description: SyncStrategy describes how to perform the
                              sync
                            properties:
                              apply:
                                description: Apply will perform a `kubectl apply`
                                  to perform the sync.
                                properties:
                                  force:
                                    description: Force indicates whether or not to
                                      supply the --force flag to `kubectl apply`.
                                      The --force flag deletes and re-create the resource,
                                      when PATCH encounters conflict and has retried
                                      for 5 times.
                                    type: boolean
                                type: object
                              hook:
                                description: Hook will submit any referenced resources
                                  to perform the sync. This is the default strategy
                                properties:
                                  force:
                                    description: Force indicates whether or not to
                                      supply the --force flag to `kubectl apply`.
                                      The --force flag deletes and re-create the resource,
                                      when PATCH encounters conflict and has retried
                                      for 5 times.
                                    type: boolean
                                type: object
                            type: object
                        type: object
                    type: object
                  phase:
                    description: Phase is the current phase of the operation
                    type: string
                  retryCount:
                    description: RetryCount contains time of operation retries
                    format: int64
                    type: integer
                  startedAt:
                    description: StartedAt contains time of operation start
                    format: date-time
                    type: string
                  syncResult:
                    description: SyncResult is the result of a Sync operation
                    properties:
                      managedNamespaceMetadata:
                        description: ManagedNamespaceMetadata contains the current
                          sync state of managed namespace metadata
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            type: object
                        type: object
                      resources:
                        description: Resources contains a list of sync result items
                          for each individual resource in a sync operation
                        items:
                          description: ResourceResult holds the operation result details
                            of a specific resource
                          properties:
                            group:
                              description: Group specifies the API group of the resource
                              type: string
                            hookPhase:
                              description: HookPhase contains the state of any operation
                                associated with this resource OR hook This can also
                                contain values for non-hook resources.
                              type: string
                            hookType:
                              description: HookType specifies the type of the hook.
                                Empty for non-hook resources
                              type: string
                            kind:
                              description: Kind specifies the API kind of the resource
                              type: string
                            message:
                              description: Message contains an informational or error
                                message for the last sync OR operation
                              type: string
                            name:
                              description: Name specifies the name of the resource
                              type: string
                            namespace:
                              description: Namespace specifies the target namespace
                                of the resource
                              type: string
                            status:
                              description: Status holds the final result of the sync.
                                Will be empty if the resources is yet to be applied/pruned
                                and is always zero-value for hooks
                              type: string
                            syncPhase:
                              description: SyncPhase indicates the particular phase
                                of the sync that this result was acquired in
                              type: string
                            version:
                              description: Version specifies the API version of the
                                resource
                              type: string
                          required:
                          - group
                          - kind
                          - name
                          - namespace
                          - version
                          type: object
                        type: array
                      revision:
                        description: Revision holds the revision this sync operation
                          was performed to
                        type: string
                      revisions:
                        description: Revisions holds the revision this sync operation
                          was performed for respective indexed source in sources field
                        items:
                          type: string
                        type: array
                      source:
                        description: Source records the application source information
                          of the sync, used for comparing auto-sync
                        properties:
                          path:
                            description: Path is a directory path within the Git repository,
                              and is only valid for applications sourced from Git.
                            type: string
                          repoURL:
                            description: RepoURL is the URL to the repository (Git
                              or Helm) that contains the application manifests
                            type: string
                          targetRevision:
                            description: TargetRevision defines the revision of the
                              source to sync the application to. In case of Git, this
                              can be commit, tag, or branch. If omitted, will equal
                              to HEAD. In case of Helm, this is a semver tag for the
                              Chart's version.
                            type: string
                        required:
                        - path
                        - repoURL
                        type: object
                      sources:
                        description: Source records the application source information
                          of the sync, used for comparing auto-sync
                        items:
                          description: ApplicationSource contains all required information
                            about the source of an application
                          properties:
                            path:
                              description: Path is a directory path within the Git
                                repository, and is only valid for applications sourced
                                from Git.
                              type: string
                            repoURL:
                              description: RepoURL is the URL to the repository (Git
                                or Helm) that contains the application manifests
                              type: string
                            targetRevision:
                              description: TargetRevision defines the revision of
                                the source to sync the application to. In case of
                                Git, this can be commit, tag, or branch. If omitted,
                                will equal to HEAD. In case of Helm, this is a semver
                                tag for the Chart's version.
                              type: string
                          required:
                          - path
                          - repoURL
                          type: object
                        type: array
                    required:
                    - revision
                    type: object
                required:
                - operation
                - phase
                - startedAt
                type: object
              reconciledState:
                description: ReconciledState contains the last version of the GitOpsDeployment
                  resource that the ArgoCD Controller reconciled
                properties:
                  destination:
                    description: GitOpsDeploymentDestination contains the information
                      of .status.Sync.CompareTo.Destination field of ArgoCD Application
                    properties:
                      name:
                        type: string
                      namespace:
                        type: string
                    required:
                    - name
                    - namespace
                    type: object
                  source:
                    description: GitOpsDeploymentSource contains the information of
                      .status.Sync.CompareTo.Source field of ArgoCD Application
                    properties:
                      branch:
                        type: string
                      path:
                        description: Path contains path from .status.Sync.CompareTo
                          field of ArgoCD Application
                        type: string
                      repoURL:
                        type: string
                    required:
                    - branch
                    - path
                    - repoURL
                    type: object
                required:
                - destination
                - source
                type: object
              resources:
                description: List of Resource created by a deployment
                items:
                  description: ResourceStatus holds the current sync and health status
                    of a resource
                  properties:
                    group:
                      type: string
                    health:
                      description: HealthStatus contains information about the currently
                        observed health state of an application or resource
                      properties:
                        message:
                          description: Message is a human-readable informational message
                            describing the health status
                          type: string
                        status:
                          description: Status holds the status code of the application
                            or resource
                          type: string
                      type: object
                    kind:
                      type: string
                    name:
                      type: string
                    namespace:
                      type: string
                    status:
                      description: SyncStatusCode is a type which represents possible
                        comparison results
                      type: string
                    version:
                      type: string
                  type: object
                type: array
              sync:
                description: SyncStatus contains information about the currently observed
                  live and desired states of an application
                properties:
                  revision:
                    description: Revision contains information about the revision
                      the comparison has been performed to
                    type: string
                  status:
                    description: Status is the sync state of the comparison
                    type: string
                required:
                - status
                type: object
            required:
            - reconciledState
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    controller-gen.kubebuilder.io/version: v0.12.1
  name: gitopsdeploymentsyncruns.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: GitOpsDeploymentSyncRun
    listKind: GitOpsDeploymentSyncRunList
    plural: gitopsdeploymentsyncruns
    singular: gitopsdeploymentsyncrun
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: GitOpsDeploymentSyncRun is the Schema for the gitopsdeploymentsyncruns
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: GitOpsDeploymentSyncRunSpec defines the desired state of
              GitOpsDeploymentSyncRun
            properties:
              gitopsDeploymentName:
                description: Reference to the target GitOpsDeployment to issue the
                  synchronization operation to
                type: string
              revisionID:
                description: 'Optional: If specified, tells the GitOps Service to
                  deploy a particular git commit SHA'
                type: string
            required:
            - gitopsDeploymentName
            type: object
          status:
            description: GitOpsDeploymentSyncRunStatus defines the observed state
              of GitOpsDeploymentSyncRun
            properties:
              conditions:
                items:
                  description: GitOpsDeploymentCondition contains details about an
                    applicationset condition, which is usally an error or warning
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the time the condition was
                        last observed
                      format: date-time
                      type: string
                    message:
                      description: Message contains human-readable message indicating
                        details about condition
                      type: string
                    reason:
                      description: Single word camelcase representing the reason for
                        the status eg ErrorOccurred
                      type: string
                    status:
                      description: True/False/Unknown
                      type: string
                    type:
                      description: Type is an applicationset condition type
                      type: string
                  required:
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    controller-gen.kubebuilder.io/version: v0.12.1
  name: operations.managed-gitops.redhat.com
spec:
  group: managed-gitops.redhat.com
  names:
    kind: Operation
    listKind: OperationList
    plural: operations
    singular: operation
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Operation is the Schema for the operations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: OperationSpec defines the desired state of Operation
            properties:
              operationID:
                type: string
            type: object
          status:
            description: OperationStatus defines the observed state of Operation
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-controller-manager
  namespace: gitops
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-controller-manager
  namespace: gitops
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-controller-manager
  namespace: gitops
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: metrics-reader
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-all-access
  namespace: gitops-service-argocd
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-delete-pods-access
  namespace: gitops-service-argocd
rules:
- apiGroups:
  - ""
  - apps
  resources:
  - pods
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-read-access
  namespace: gitops-service-argocd
rules:
- apiGroups:
  - ""
  - apps
  resources:
  - pods
  - pods/log
  - deployments
  - events
  - bindings
  - replicas
  - configmaps
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-read-all-access
  namespace: gitops-service-argocd
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-leader-election-role
  namespace: gitops
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-leader-election-role
  namespace: gitops
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-all-access
  namespace: gitops
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-delete-pods-access
  namespace: gitops
rules:
- apiGroups:
  - ""
  - apps
  resources:
  - pods
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-read-access
  namespace: gitops
rules:
- apiGroups:
  - ""
  - apps
  resources:
  - pods
  - pods/log
  - deployments
  - events
  - bindings
  - replicas
  - configmaps
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespaces-read-all-access
  namespace: gitops
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-leader-election-role
  namespace: gitops
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitops-namespaces-all-access
  namespace: jgwest-tenant
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitops-namespaces-delete-pods-access
  namespace: jgwest-tenant
rules:
- apiGroups:
  - ""
  - apps
  resources:
  - pods
  verbs:
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitops-namespaces-read-access
  namespace: jgwest-tenant
rules:
- apiGroups:
  - ""
  - apps
  resources:
  - pods
  - pods/log
  - deployments
  - events
  - bindings
  - replicas
  - configmaps
  - namespaces
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: gitops-namespaces-read-all-access
  namespace: jgwest-tenant
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: appstudio-openshift-gitops-argocd-application-controller
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - '*'
- nonResourceURLs:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: appstudio-openshift-gitops-argocd-server
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - delete
  - get
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - list
- apiGroups:
  - ""
  resources:
  - pods
  - pods/log
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-deploymenttargetclass-viewer-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargetclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargetclasses/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-manager-role
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargetclaims
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargetclaims/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargetclaims/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargetclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargets/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - deploymenttargets/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - promotionruns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - promotionruns/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - promotionruns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshotenvironmentbindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshotenvironmentbindings/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshotenvironmentbindings/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentmanagedenvironments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeployments/finalizers
  verbs:
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - toolchain.dev.openshift.com
  resources:
  - spacerequests
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - toolchain.dev.openshift.com
  resources:
  - spacerequests/finalizers
  verbs:
  - update
- apiGroups:
  - toolchain.dev.openshift.com
  resources:
  - spacerequests/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-component-maintainer
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  - clusterroles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  - apps
  resources:
  - bindings
  - configmaps
  - daemonsets
  - deployments
  - events
  - namespaces
  - nodes
  - pods
  - pods/log
  - replicas
  - replicasets
  - routes
  - secrets
  - serviceaccounts
  - services
  - statefulsets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshotenvironmentbindings
  verbs:
  - delete
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  - mutatingwebhookconfigurations
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - operators.coreos.com
  resources:
  - catalogsources
  - clusterserviceversions
  - installplans
  - operatorgroups
  - subscriptions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - toolchain.dev.openshift.com
  resources:
  - spacerequests
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - monitoring.coreos.com
  resources:
  - alertmanagers
  - prometheuses
  - prometheusrules
  - servicemonitors
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - operators.coreos.com
  resources:
  - installplans
  verbs:
  - get
  - list
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  - endpoints
  - persistentvolumeclaims
  - persistentvolumes
  - pods
  - secrets
  - serviceaccounts
  - services
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  - statefulsets
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentmanagedenvironments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentmanagedenvironments/finalizers
  verbs:
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentmanagedenvironments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentrepositorycredentials
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentrepositorycredentials/finalizers
  verbs:
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentrepositorycredentials/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeployments/finalizers
  verbs:
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeployments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentsyncruns
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentsyncruns/finalizers
  verbs:
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - gitopsdeploymentsyncruns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - operations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  - ingresses
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - pipelinesascode.tekton.dev
  resources:
  - repositories
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - delete
  - get
  - list
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggertemplates
  verbs:
  - delete
  - get
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-manager-role
rules:
- apiGroups:
  - argoproj.io
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - appprojects
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - argoproj.io
  resources:
  - argocds
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - operations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - operations/finalizers
  verbs:
  - update
- apiGroups:
  - managed-gitops.redhat.com
  resources:
  - operations/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-argocd-namespace-all-access
  namespace: gitops-service-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-namespaces-all-access
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-gitops-admins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-argocd-namespace-read-access
  namespace: gitops-service-argocd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-namespaces-read-access
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-leader-election-rolebinding
  namespace: gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-appstudio-service-leader-election-role
subjects:
- kind: ServiceAccount
  name: gitops-appstudio-service-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-leader-election-rolebinding
  namespace: gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-core-service-leader-election-role
subjects:
- kind: ServiceAccount
  name: gitops-core-service-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespace-all-access
  namespace: gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-namespaces-all-access
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-gitops-admins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-namespace-read-access
  namespace: gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-namespaces-read-access
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-leader-election-rolebinding
  namespace: gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-service-agent-leader-election-role
subjects:
- kind: ServiceAccount
  name: gitops-service-agent-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: gitops-allow-team-access-to-jgwest-tenant
  namespace: jgwest-tenant
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gitops-namespaces-all-access
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-gitops-admins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-gitops-component-maintainers
  namespace: gitops
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-component-maintainer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-gitops-admins
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: appstudio-openshift-gitops-argocd-application-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appstudio-openshift-gitops-argocd-application-controller
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: appstudio-openshift-gitops-argocd-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: appstudio-openshift-gitops-argocd-server
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-server
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-deploymenttargetclass-viewer-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-appstudio-service-deploymenttargetclass-viewer-role
subjects:
- kind: Group
  name: system:authenticated
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-appstudio-service-manager-role
subjects:
- kind: ServiceAccount
  name: gitops-appstudio-service-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-appstudio-service-proxy-role
subjects:
- kind: ServiceAccount
  name: gitops-appstudio-service-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-core-service-manager-role
subjects:
- kind: ServiceAccount
  name: gitops-core-service-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-core-service-proxy-role
subjects:
- kind: ServiceAccount
  name: gitops-core-service-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-service-agent-manager-role
subjects:
- kind: ServiceAccount
  name: gitops-service-agent-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-service-agent-proxy-role
subjects:
- kind: ServiceAccount
  name: gitops-service-agent-controller-manager
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: prometheus-gitops-appstudio-service-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-appstudio-service-metrics-reader
subjects:
- kind: ServiceAccount
  name: metrics-reader
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: prometheus-gitops-core-service-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-core-service-metrics-reader
subjects:
- kind: ServiceAccount
  name: metrics-reader
  namespace: gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: prometheus-gitops-service-agent-metrics-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gitops-service-agent-metrics-reader
subjects:
- kind: ServiceAccount
  name: metrics-reader
  namespace: gitops
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 53746cb8.redhat.com
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service-manager-config
  namespace: gitops
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 5a3f596c.redhat.com
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service-manager-config
  namespace: gitops
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 5a3f596c.redhat.com
kind: ConfigMap
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent-manager-config
  namespace: gitops
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    kubernetes.io/service-account.name: metrics-reader
  name: metrics-reader
  namespace: gitops
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    control-plane: appstudio-controller-manager
  name: gitops-appstudio-service-controller-manager-metrics-service
  namespace: gitops
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: metrics
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: appstudio-controller-manager
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
  name: gitops-appstudio-service-webhook-service
  namespace: gitops
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: appstudio-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    control-plane: backend-controller-manager
  name: gitops-core-service-controller-manager-metrics-service
  namespace: gitops
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: metrics
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: backend-controller-manager
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    service.beta.openshift.io/serving-cert-secret-name: core-webhook-server-cert
  name: gitops-core-service-webhook-service
  namespace: gitops
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: backend-controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    control-plane: cluster-agent-controller-manager
  name: gitops-service-agent-controller-manager-metrics-service
  namespace: gitops
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: metrics
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: cluster-agent-controller-manager
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    control-plane: appstudio-controller-manager
  name: gitops-appstudio-service-controller-manager
  namespace: gitops
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: appstudio-controller-manager
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: appstudio-controller-manager
    spec:
      containers:
      - args:
        - --leader-elect
        - --zap-time-encoding=rfc3339nano
        - --health-probe-bind-address=:8085
        - --metrics-bind-address=:8080
        - --zap-log-level
        - info
        command:
        - appstudio-controller
        image: quay.io/redhat-appstudio/gitops-service:87e1f9acc67bf033d2159951ba6489f0836586ef
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8085
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8080
          name: http-metrics
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8085
          initialDelaySeconds: 15
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 3172Mi
          requests:
            cpu: 200m
            memory: 1024Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        - --http2-disable=true
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      securityContext:
        runAsNonRoot: true
      serviceAccountName: gitops-appstudio-service-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    control-plane: backend-controller-manager
  name: gitops-core-service-controller-manager
  namespace: gitops
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: backend-controller-manager
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        control-plane: backend-controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:18081
        - --metrics-bind-address=:8080
        - --leader-elect
        - --zap-time-encoding=rfc3339nano
        - --zap-log-level
        - info
        command:
        - gitops-service-backend
        env:
        - name: ARGO_CD_NAMESPACE
          value: gitops-service-argocd
        - name: DB_ADDR
          value: ""
          valueFrom:
            secretKeyRef:
              key: db.host
              name: gitops-service-postgres-rds-config
        - name: DB_PASS
          value: ""
          valueFrom:
            secretKeyRef:
              key: db.password
              name: gitops-service-postgres-rds-config
        - name: ENABLE_APPPROJECT_ISOLATION
          value: "true"
        image: quay.io/redhat-appstudio/gitops-service:87e1f9acc67bf033d2159951ba6489f0836586ef
        livenessProbe:
          httpGet:
            path: /healthz
            port: 18081
          initialDelaySeconds: 120
          periodSeconds: 60
        name: manager
        ports:
        - containerPort: 8080
          name: http-metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 18081
          initialDelaySeconds: 180
          periodSeconds: 30
        resources:
          limits:
            cpu: 2000m
            memory: 4800Mi
          requests:
            cpu: 1000m
            memory: 2400Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        - --http2-disable=true
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      securityContext:
        runAsNonRoot: true
      serviceAccountName: gitops-core-service-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: core-webhook-server-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  labels:
    control-plane: cluster-agent-controller-manager
  name: gitops-service-agent-controller-manager
  namespace: gitops
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: cluster-agent-controller-manager
  template:
    metadata:
      annotations:
        argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
      labels:
        control-plane: cluster-agent-controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8083
        - --metrics-bind-address=:8080
        - --leader-elect
        - --zap-time-encoding=rfc3339nano
        - --zap-log-level
        - info
        command:
        - gitops-service-cluster-agent
        env:
        - name: ARGO_CD_NAMESPACE
          value: gitops-service-argocd
        - name: DB_ADDR
          value: ""
          valueFrom:
            secretKeyRef:
              key: db.host
              name: gitops-service-postgres-rds-config
        - name: DB_PASS
          value: ""
          valueFrom:
            secretKeyRef:
              key: db.password
              name: gitops-service-postgres-rds-config
        - name: ENABLE_APPPROJECT_ISOLATION
          value: "true"
        image: quay.io/redhat-appstudio/gitops-service:87e1f9acc67bf033d2159951ba6489f0836586ef
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8083
          initialDelaySeconds: 45
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8080
          name: http-metrics
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8083
          initialDelaySeconds: 45
          periodSeconds: 10
        resources:
          limits:
            cpu: 300m
            memory: 1000Mi
          requests:
            cpu: 200m
            memory: 300Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        - --http2-disable=true
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 100m
            memory: 100Mi
          requests:
            cpu: 50m
            memory: 50Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      securityContext:
        runAsNonRoot: true
      serviceAccountName: gitops-service-agent-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: tmp
---
apiVersion: appstudio.redhat.com/v1alpha1
kind: DeploymentTargetClass
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: isolation-level-namespace
spec:
  parameters: {}
  provisioner: appstudio.redhat.com/devsandbox
  reclaimPolicy: Delete
---
apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  finalizers:
  - argoproj.io/finalizer
  name: gitops-service-argocd
  namespace: gitops-service-argocd
spec:
  applicationSet:
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: 250m
        memory: 128Mi
  controller:
    env:
    - name: ARGOCD_RECONCILIATION_TIMEOUT
      value: 60s
    logLevel: info
    processors: {}
    resources:
      limits:
        cpu: "2"
        memory: 6Gi
      requests:
        cpu: "1"
        memory: 3Gi
    sharding: {}
  grafana:
    enabled: false
    ingress:
      enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    route:
      enabled: false
  ha:
    enabled: false
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  initialSSHKnownHosts: {}
  prometheus:
    enabled: false
    ingress:
      enabled: false
    route:
      enabled: false
  rbac:
    policy: g, system:authenticated, role:admin
    scopes: '[groups]'
  redis:
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
  repo:
    env:
    - name: ARGOCD_RECONCILIATION_TIMEOUT
      value: 60s
    execTimeout: 30
    extraRepoCommandArgs:
    - --max-combined-directory-manifests-size
    - 10M
    - --parallelismlimit
    - "20"
    logLevel: info
    resources:
      limits:
        cpu: "1"
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 512Mi
  resourceInclusions: |
    - apiGroups:
      - ""
      kinds:
      - "PersistentVolumeClaim"
      - "PersistentVolume"
      - "Secret"
      - "ConfigMap"
      - "Pod"
      - "Endpoint"
      - "Service"
      - "ServiceAccounts"
      clusters:
      - "*"
    - apiGroups:
      - "apps"
      kinds:
      - "ReplicaSet"
      - "StatefulSet"
      - "DaemonSet"
      - "Deployment"
      clusters:
      - "*"
    - apiGroups:
      - "discovery.k8s.io"
      kinds:
      - "EndpointSlice"
      clusters:
      - "*"
    - apiGroups:
      - "networking.k8s.io"
      kinds:
      - "Ingress"
      - "IngressClass"
      clusters:
      - "*"
    - apiGroups:
      - "rbac.authorization.k8s.io"
      kinds:
      - "RoleBinding"
      - "Role"
      clusters:
      - "*"
    - apiGroups:
      - "route.openshift.io"
      kinds:
      - "Route"
      clusters:
      - "*"
    - apiGroups:
      - "triggers.tekton.dev"
      kinds:
      - "EventListener"
      - "TriggerTemplate"
      clusters:
      - "*"
    - apiGroups:
      - "pipelinesascode.tekton.dev"
      kinds:
      - "Repository"
      clusters:
      - "*"
  server:
    autoscale:
      enabled: false
    grpc:
      ingress:
        enabled: false
    ingress:
      enabled: false
    logLevel: info
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 125m
        memory: 128Mi
    route:
      enabled: true
      tls:
        termination: reencrypt
    service:
      type: ""
  tls:
    ca: {}
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
  name: gitops-service-postgres-rds-config
  namespace: gitops
spec:
  dataFrom:
  - extract:
      key: integrations-output/terraform-resources/appsrep07ue1/stonesoup-infra-production/multi-tenant-prod-gitopsvc-rds
  refreshInterval: 1h
  secretStoreRef:
    kind: ClusterSecretStore
    name: appsre-vault
  target:
    creationPolicy: Owner
    deletionPolicy: Delete
    name: gitops-service-postgres-rds-config
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-appstudio-service
  namespace: gitops
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: metrics-reader
    interval: 15s
    path: /metrics
    port: metrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: appstudio-controller-manager
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-core-service
  namespace: gitops
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: metrics-reader
    interval: 15s
    path: /metrics
    port: metrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: backend-controller-manager
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
  name: gitops-service-agent
  namespace: gitops
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: metrics-reader
    interval: 15s
    path: /metrics
    port: metrics
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: cluster-agent-controller-manager
---
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/sync-wave: "-1"
  name: openshift-gitops-operator
  namespace: openshift-operators
spec:
  channel: gitops-1.9
  installPlanApproval: Automatic
  name: openshift-gitops-operator
  source: redhat-operators
  sourceNamespace: openshift-marketplace
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: gitops-core-service-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /mutate-managed-gitops-redhat-com-v1alpha1-gitopsdeployment
  failurePolicy: Fail
  name: mgitopsdeployment.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeployments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /mutate-managed-gitops-redhat-com-v1alpha1-gitopsdeploymentmanagedenvironment
  failurePolicy: Fail
  name: mgitopsdeploymentmanagedenvironment.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeploymentmanagedenvironments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /mutate-managed-gitops-redhat-com-v1alpha1-gitopsdeploymentrepositorycredential
  failurePolicy: Fail
  name: mgitopsdeploymentrepositorycredential.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeploymentrepositorycredentials
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /mutate-managed-gitops-redhat-com-v1alpha1-gitopsdeploymentsyncrun
  failurePolicy: Fail
  name: mgitopsdeploymentsyncrun.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeploymentsyncruns
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    service.beta.openshift.io/inject-cabundle: "true"
  name: gitops-appstudio-service-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  - v1beta1
  clientConfig:
    service:
      name: gitops-appstudio-service-webhook-service
      namespace: gitops
      path: /validate-appstudio-redhat-com-v1alpha1-environment
  failurePolicy: Fail
  name: venvironment.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - environments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-appstudio-service-webhook-service
      namespace: gitops
      path: /validate-appstudio-redhat-com-v1alpha1-promotionrun
  failurePolicy: Fail
  name: vpromotionrun.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - promotionruns
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-appstudio-service-webhook-service
      namespace: gitops
      path: /validate-appstudio-redhat-com-v1alpha1-snapshot
  failurePolicy: Fail
  name: vsnapshot.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - snapshots
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-appstudio-service-webhook-service
      namespace: gitops
      path: /validate-appstudio-redhat-com-v1alpha1-snapshotenvironmentbinding
  failurePolicy: Fail
  name: vsnapshotenvironmentbinding.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - snapshotenvironmentbindings
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    service.beta.openshift.io/inject-cabundle: "true"
  creationTimestamp: null
  name: gitops-core-service-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /validate-managed-gitops-redhat-com-v1alpha1-gitopsdeployment
  failurePolicy: Fail
  name: vgitopsdeployment.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeployments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /validate-managed-gitops-redhat-com-v1alpha1-gitopsdeploymentmanagedenvironment
  failurePolicy: Fail
  name: vgitopsdeploymentmanagedenvironment.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeploymentmanagedenvironments
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /validate-managed-gitops-redhat-com-v1alpha1-gitopsdeploymentrepositorycredential
  failurePolicy: Fail
  name: vgitopsdeploymentrepositorycredential.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeploymentrepositorycredentials
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: gitops-core-service-webhook-service
      namespace: gitops
      path: /validate-managed-gitops-redhat-com-v1alpha1-gitopsdeploymentsyncrun
  failurePolicy: Fail
  name: vgitopsdeploymentsyncrun.kb.io
  rules:
  - apiGroups:
    - managed-gitops.redhat.com
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - gitopsdeploymentsyncruns
  sideEffects: None
