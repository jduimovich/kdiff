apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: integration-service
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
    service.beta.openshift.io/inject-cabundle: "true"
  name: integrationtestscenarios.appstudio.redhat.com
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: integration-service-webhook-service
          namespace: integration-service
          path: /convert
      conversionReviewVersions:
      - v1alpha1
      - v1beta1
      - v1beta2
  group: appstudio.redhat.com
  names:
    kind: IntegrationTestScenario
    listKind: IntegrationTestScenarioList
    plural: integrationtestscenarios
    shortNames:
    - its
    singular: integrationtestscenario
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    deprecated: true
    deprecationWarning: The v1alpha1 version is deprecated and will be automatically
      migrated to v1beta1
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              bundle:
                description: Tekton Bundle where to find the pipeline
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              environment:
                description: Environment that will be utilized by the test pipeline
                properties:
                  configuration:
                    description: EnvironmentConfiguration contains Environment-specific
                      configurations details, to be used when generating Component/Application
                      GitOps repository resources.
                    properties:
                      env:
                        description: Env is an array of standard environment variables
                        items:
                          description: EnvVarPair describes environment variables
                            to use for the component
                          properties:
                            name:
                              description: Name is the environment variable name
                              type: string
                            value:
                              description: Value is the environment variable value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      target:
                        description: Target is used to reference a DeploymentTargetClaim
                          for a target Environment. The Environment controller uses
                          the referenced DeploymentTargetClaim to access its bounded
                          DeploymentTarget with cluster credential secret.
                        properties:
                          deploymentTargetClaim:
                            description: DeploymentTargetClaimConfig specifies the
                              DeploymentTargetClaim details for a given Environment.
                            properties:
                              claimName:
                                type: string
                            required:
                            - claimName
                            type: object
                        required:
                        - deploymentTargetClaim
                        type: object
                    type: object
                  name:
                    type: string
                  type:
                    description: 'DEPRECATED: EnvironmentType should no longer be
                      used, and has no replacement. - It''s original purpose was to
                      indicate whether an environment is POC/Non-POC, but these data
                      were ultimately not required.'
                    type: string
                required:
                - name
                - type
                type: object
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              pipeline:
                description: Release Tekton Pipeline to execute
                type: string
            required:
            - application
            - bundle
            - pipeline
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    deprecated: true
    deprecationWarning: The v1beta1 version is deprecated and will be automatically
      migrated to v1beta2
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              environment:
                description: Environment that will be utilized by the test pipeline
                properties:
                  configuration:
                    description: EnvironmentConfiguration contains Environment-specific
                      configurations details, to be used when generating Component/Application
                      GitOps repository resources.
                    properties:
                      env:
                        description: Env is an array of standard environment variables
                        items:
                          description: EnvVarPair describes environment variables
                            to use for the component
                          properties:
                            name:
                              description: Name is the environment variable name
                              type: string
                            value:
                              description: Value is the environment variable value
                              type: string
                          required:
                          - name
                          - value
                          type: object
                        type: array
                      target:
                        description: Target is used to reference a DeploymentTargetClaim
                          for a target Environment. The Environment controller uses
                          the referenced DeploymentTargetClaim to access its bounded
                          DeploymentTarget with cluster credential secret.
                        properties:
                          deploymentTargetClaim:
                            description: DeploymentTargetClaimConfig specifies the
                              DeploymentTargetClaim details for a given Environment.
                            properties:
                              claimName:
                                type: string
                            required:
                            - claimName
                            type: object
                        required:
                        - deploymentTargetClaim
                        type: object
                    type: object
                  name:
                    type: string
                  type:
                    description: 'DEPRECATED: EnvironmentType should no longer be
                      used, and has no replacement. - It''s original purpose was to
                      indicate whether an environment is POC/Non-POC, but these data
                      were ultimately not required.'
                    type: string
                required:
                - name
                - type
                type: object
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              resolverRef:
                description: Tekton Resolver where to store the Tekton resolverRef
                  trigger Tekton pipeline used to refer to a Pipeline or Task in a
                  remote location like a git repo.
                properties:
                  params:
                    description: Params contains the parameters used to identify the
                      referenced Tekton resource. Example entries might include "repo"
                      or "path" but the set of params ultimately depends on the chosen
                      resolver.
                    items:
                      description: ResolverParameter contains the name and values
                        used to identify the referenced Tekton resource
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  resolver:
                    description: Resolver is the name of the resolver that should
                      perform resolution of the referenced Tekton resource, such as
                      "git" or "bundle"..
                    type: string
                required:
                - params
                - resolver
                type: object
            required:
            - application
            - resolverRef
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.application
      name: Application
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: IntegrationTestScenario is the Schema for the integrationtestscenarios
          API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: IntegrationTestScenarioSpec defines the desired state of
              IntegrationScenario
            properties:
              application:
                description: Application that's associated with the IntegrationTestScenario
                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                type: string
              contexts:
                description: Contexts where this IntegrationTestScenario can be applied
                items:
                  description: TestContext contains the name and values of a Test
                    context
                  properties:
                    description:
                      type: string
                    name:
                      type: string
                  required:
                  - name
                  type: object
                type: array
              params:
                description: Params to pass to the pipeline
                items:
                  description: PipelineParameter contains the name and values of a
                    Tekton Pipeline parameter
                  properties:
                    name:
                      type: string
                    value:
                      type: string
                    values:
                      items:
                        type: string
                      type: array
                  required:
                  - name
                  type: object
                type: array
              resolverRef:
                description: Tekton Resolver where to store the Tekton resolverRef
                  trigger Tekton pipeline used to refer to a Pipeline or Task in a
                  remote location like a git repo.
                properties:
                  params:
                    description: Params contains the parameters used to identify the
                      referenced Tekton resource. Example entries might include "repo"
                      or "path" but the set of params ultimately depends on the chosen
                      resolver.
                    items:
                      description: ResolverParameter contains the name and values
                        used to identify the referenced Tekton resource
                      properties:
                        name:
                          type: string
                        value:
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                  resolver:
                    description: Resolver is the name of the resolver that should
                      perform resolution of the referenced Tekton resource, such as
                      "git" or "bundle"..
                    type: string
                required:
                - params
                - resolver
                type: object
            required:
            - application
            - resolverRef
            type: object
          status:
            description: IntegrationTestScenarioStatus defines the observed state
              of IntegrationTestScenario
            properties:
              conditions:
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
            required:
            - conditions
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: integration-service-metrics-reader
  namespace: integration-service
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: integration-service-snapshot-garbage-collector
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: integration-service-leader-election-role
  namespace: integration-service
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: crd-manager-for-integration
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - patch
  - get
  - list
  - create
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: delete-snapshots
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots
  verbs:
  - delete
  - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: integration-service-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - applications/status
  verbs:
  - get
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components
  verbs:
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - components/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - environments/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releaseplans/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots/finalizers
  verbs:
  - update
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - pipelinesascode.tekton.dev
  resources:
  - repositories
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns/finalizers
  verbs:
  - update
- apiGroups:
  - tekton.dev
  resources:
  - pipelineruns/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - tekton.dev
  resources:
  - taskruns
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - tekton.dev
  resources:
  - taskruns/status
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-prometheus-viewer-role
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-snapshot-garbage-collector
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - releases
  verbs:
  - get
  - list
- apiGroups:
  - appstudio.redhat.com
  resources:
  - snapshots
  verbs:
  - get
  - list
  - delete
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: integration-service-tekton-editor-role
rules:
- apiGroups:
  - triggers.tekton.dev
  resources:
  - eventlisteners
  - triggers
  - triggertemplates
  verbs:
  - create
  - update
  - patch
  - delete
  - watch
  - list
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  - persistentvolumeclaims/status
  verbs:
  - get
  - list
  - create
  - watch
- apiGroups:
  - route.openshift.io
  resources:
  - routes
  verbs:
  - get
  - list
  - create
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: manage-integrationtestscenarios
rules:
- apiGroups:
  - appstudio.redhat.com
  resources:
  - integrationtestscenarios
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
  - delete
  - deletecollection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: grant-argocd
  namespace: integration-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: admin
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: integration-service-leader-election-rolebinding
  namespace: integration-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: integration-service-leader-election-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: integration-service-maintainers
  namespace: integration-service
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: component-maintainer
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-integration
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: delete-snapshots
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: delete-snapshots
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-integration
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grant-argocd-crd-permissions-for-integration
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: crd-manager-for-integration
subjects:
- kind: ServiceAccount
  name: openshift-gitops-argocd-application-controller
  namespace: openshift-gitops
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-manager-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-prometheus-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-prometheus-viewer-role
subjects:
- kind: ServiceAccount
  name: integration-service-metrics-reader
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-proxy-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-snapshot-garbage-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-snapshot-garbage-collector
subjects:
- kind: ServiceAccount
  name: integration-service-snapshot-garbage-collector
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: integration-service-tekton-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: integration-service-tekton-editor-role
subjects:
- kind: ServiceAccount
  name: integration-service-controller-manager
  namespace: integration-service
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: manage-integrationtestscenarios
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: manage-integrationtestscenarios
subjects:
- apiGroup: rbac.authorization.k8s.io
  kind: Group
  name: konflux-integration
---
apiVersion: v1
data:
  CONSOLE_NAME: Konflux Dev version
  CONSOLE_URL: ""
  CONSOLE_URL_TASKLOG: ""
kind: ConfigMap
metadata:
  name: integration-config-h9d67t5c7h
  namespace: integration-service
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f1944211.redhat.com
kind: ConfigMap
metadata:
  name: integration-service-manager-config
  namespace: integration-service
---
apiVersion: v1
data:
  FINALLY_TIMEOUT: 2h
  PIPELINE_TIMEOUT: 6h
  TASKS_TIMEOUT: 4h
kind: ConfigMap
metadata:
  name: pipelinerun-options-g6875ct7d8
  namespace: integration-service
---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    config.openshift.io/inject-trusted-cabundle: "true"
  name: trusted-ca-6ct58987ht
  namespace: integration-service
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: integration-service-metrics-reader
  name: integration-service-metrics-reader
  namespace: integration-service
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: integration-service-controller-manager-metrics-service
  namespace: integration-service
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: webhook-server-cert
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/created-by: integration-service
    app.kubernetes.io/instance: webhook-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: integration-service
  name: integration-service-webhook-service
  namespace: integration-service
spec:
  ports:
  - port: 443
    protocol: TCP
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: integration-service-controller-manager
  namespace: integration-service
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: CONSOLE_NAME
          valueFrom:
            configMapKeyRef:
              key: CONSOLE_NAME
              name: integration-config-h9d67t5c7h
              optional: true
        - name: CONSOLE_URL
          valueFrom:
            configMapKeyRef:
              key: CONSOLE_URL
              name: integration-config-h9d67t5c7h
              optional: true
        - name: CONSOLE_URL_TASKLOG
          valueFrom:
            configMapKeyRef:
              key: CONSOLE_URL_TASKLOG
              name: integration-config-h9d67t5c7h
              optional: true
        - name: PIPELINE_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: PIPELINE_TIMEOUT
              name: pipelinerun-options-g6875ct7d8
              optional: true
        - name: TASKS_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: TASKS_TIMEOUT
              name: pipelinerun-options-g6875ct7d8
              optional: true
        - name: FINALLY_TIMEOUT
          valueFrom:
            configMapKeyRef:
              key: FINALLY_TIMEOUT
              name: pipelinerun-options-g6875ct7d8
              optional: true
        image: quay.io/redhat-appstudio/integration-service:64cfb95a8272cd99f69ed4028acb81887ff3cf03
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8081
          name: probes
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 20Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /etc/pki/ca-trust/extracted/pem
          name: trusted-ca
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --http2-disable
        - --v=0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.15.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          readOnlyRootFilesystem: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: integration-service-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          items:
          - key: ca-bundle.crt
            path: tls-ca-bundle.pem
          name: trusted-ca-6ct58987ht
        name: trusted-ca
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: integration-service-snapshot-garbage-collector
  namespace: integration-service
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - command:
            - /snapshotgc
            - --zap-log-level=debug
            - --pr-snapshots-to-keep=100
            - --non-pr-snapshots-to-keep=700
            env:
            - name: PR_SNAPSHOTS_TO_KEEP
              value: "10"
            image: quay.io/redhat-appstudio/integration-service:64cfb95a8272cd99f69ed4028acb81887ff3cf03
            imagePullPolicy: Always
            name: test-gc
            resources:
              limits:
                cpu: 1000m
                memory: 500Mi
              requests:
                cpu: 1000m
                memory: 500Mi
            securityContext:
              readOnlyRootFilesystem: true
              runAsNonRoot: true
          restartPolicy: Never
          serviceAccountName: integration-service-snapshot-garbage-collector
  schedule: 0 5 * * *
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  labels:
    app.kubernetes.io/component: metrics
    app.kubernetes.io/created-by: integration-service
    app.kubernetes.io/instance: controller-manager-metrics-monitor
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: servicemonitor
    app.kubernetes.io/part-of: integration-service
    control-plane: controller-manager
  name: integration-service-controller-manager-metrics-monitor
  namespace: integration-service
spec:
  endpoints:
  - bearerTokenSecret:
      key: token
      name: integration-service-metrics-reader
    path: /metrics
    port: https
    scheme: https
    tlsConfig:
      insecureSkipVerify: true
  selector:
    matchLabels:
      control-plane: controller-manager
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  annotations:
    service.beta.openshift.io/inject-cabundle: "true"
  name: integration-service-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: integration-service-webhook-service
      namespace: integration-service
      path: /validate-appstudio-redhat-com-v1beta2-integrationtestscenario
  failurePolicy: Fail
  name: vintegrationtestscenario.kb.io
  rules:
  - apiGroups:
    - appstudio.redhat.com
    apiVersions:
    - v1beta2
    operations:
    - CREATE
    - UPDATE
    - DELETE
    resources:
    - integrationtestscenarios
  sideEffects: None
