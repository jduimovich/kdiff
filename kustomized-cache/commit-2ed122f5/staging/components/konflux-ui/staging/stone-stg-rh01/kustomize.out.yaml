apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
  namespace: konflux-ui
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    serviceaccounts.openshift.io/oauth-redirecturi.konflux: https://konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com/idp/callback
  name: dex-client
  namespace: konflux-ui
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: proxy
  namespace: konflux-ui
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: dex
rules:
- apiGroups:
  - dex.coreos.com
  resources:
  - '*'
  verbs:
  - '*'
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: konflux-proxy
rules:
- apiGroups:
  - ""
  resources:
  - users
  verbs:
  - impersonate
- apiGroups:
  - authorization.k8s.io
  resources:
  - localsubjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: konflux-proxy-namespace-lister
rules:
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - list
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: dex
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: konflux-ui
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: konflux-proxy
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: konflux-proxy
subjects:
- kind: ServiceAccount
  name: proxy
  namespace: konflux-ui
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: konflux-proxy-namespace-lister
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: konflux-proxy-namespace-lister
subjects:
- kind: ServiceAccount
  name: proxy
  namespace: konflux-ui
---
apiVersion: v1
data:
  dex-config.yaml: |
    issuer: https://konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com/idp
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      https: 0.0.0.0:9443
      tlsCert: /etc/dex/tls/tls.crt
      tlsKey: /etc/dex/tls/tls.key
    oauth2:
      skipApprovalScreen: true
    staticClients:
    - id: oauth2-proxy
      redirectURIs:
      - https://konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com/oauth2/callback
      # required for using dex from a UI instance run locally
      - https://localhost:8080/oauth2/callback
      name: 'oauth2-proxy'
      secretEnv: 'OAUTH2_CLIENT_SECRET'

    telemetry:
      http: 0.0.0.0:5558

    connectors:
      - type: openshift
        id: openshift
        name: OpenShift
        config:
          # OpenShift API
          issuer: https://api.stone-stg-rh01.l2vh.p1.openshiftapps.com:6443
          # Credentials can be string literals or pulled from the environment.
          clientID: system:serviceaccount:konflux-ui:dex-client
          clientSecret: $OPENSHIFT_OAUTH_CLIENT_SECRET
          redirectURI: https://konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com/idp/callback
kind: ConfigMap
metadata:
  name: dex-22h6m5fdfm
  namespace: konflux-ui
---
apiVersion: v1
data:
  nginx.conf: "worker_processes auto;\nerror_log /var/log/nginx/error.log;\npid /run/nginx.pid;\n\n#
    Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.\ninclude /usr/share/nginx/modules/*.conf;\n\nevents
    {\n    worker_connections 1024;\n}\n\nhttp {\n    log_format upstreamlog '[$time_local]
    $remote_addr - $remote_user - $server_name $host to: $proxy_host  $upstream_addr:
    $request $status upstream_response_time $upstream_response_time msec $msec request_time
    $request_time X-Forwarded-Host: $http_x_forwarded_host';\n    access_log /dev/stderr
    upstreamlog;\n    error_log /dev/stderr;\n\n    sendfile on;\n    tcp_nopush on;\n
    \   tcp_nodelay on;\n    keepalive_timeout 65;\n    types_hash_max_size 4096;\n\n
    \   default_type application/octet-stream;\n\n    client_body_temp_path /var/run/openresty/nginx-client-body;\n
    \   proxy_temp_path       /var/run/openresty/nginx-proxy;\n    fastcgi_temp_path
    \    /var/run/openresty/nginx-fastcgi;\n    uwsgi_temp_path       /var/run/openresty/nginx-uwsgi;\n
    \   scgi_temp_path        /var/run/openresty/nginx-scgi;\n\n    include /usr/local/openresty/nginx/conf/mime.types;\n\n
    \   map $http_upgrade $connection_upgrade {\n        default upgrade;\n        ''
    close;\n    }\n\n    server {\n        listen 9443 ssl;\n        ssl_certificate
    /mnt/tls.crt;\n        ssl_certificate_key /mnt/tls.key;\n        server_name
    _;\n        root /opt/app-root/src;\n\n        location / {\n            alias
    /opt/app-root/src/static-content/;\n            try_files $uri /index.html;\n
    \       }\n\n        location = /404.html {\n        }\n\n        location = /oauth2/auth
    {\n            internal; \n            proxy_pass       http://127.0.0.1:6000;\n
    \           proxy_set_header Host             $host;\n            proxy_set_header
    X-Real-IP        $remote_addr;\n            proxy_set_header X-Scheme         $scheme;\n
    \           proxy_set_header X-Forwarded-Host $http_x_forwarded_host;\n            #
    nginx auth_request includes headers but not body\n            proxy_set_header
    Content-Length   \"\";\n            proxy_pass_request_body           off;\n        }\n\n
    \       location /oauth2/ {\n            proxy_pass       http://127.0.0.1:6000/oauth2/;\n
    \           proxy_set_header Host             $host;\n            proxy_set_header
    X-Real-IP        $remote_addr;\n            proxy_set_header X-Scheme         $scheme;\n
    \           proxy_set_header X-Forwarded-Host $http_x_forwarded_host;\n        }\n\n
    \       location /api/k8s/registration/ {\n           # Registration Service registration
    endpoint\n            auth_request_set $email  $upstream_http_x_auth_request_email;\n
    \           proxy_set_header X-Email $email;\n            auth_request_set $user
    \ $upstream_http_x_auth_request_user;\n            proxy_set_header X-User  $user;\n
    \           auth_request_set $username  $upstream_http_x_auth_request_preferred_username;
    \n            proxy_set_header X-Auth-Request-Preferred-Username $username;\n
    \           auth_request_set $groups  $upstream_http_x_auth_request_groups;\n
    \           proxy_set_header X-Auth-Request-Groups  $groups;    \n\n            auth_request
    /oauth2/auth;\n            proxy_pass http://127.0.0.1:5000/;\n        }\n\n        location
    /api/k8s/apis/toolchain.dev.openshift.com/v1alpha1/workspaces {\n           #
    Registration Service workspaces endpoint\n            auth_request_set $email
    \ $upstream_http_x_auth_request_email;\n            proxy_set_header X-Email $email;\n
    \           auth_request_set $user  $upstream_http_x_auth_request_user;\n            proxy_set_header
    X-User  $user;\n            auth_request_set $username  $upstream_http_x_auth_request_preferred_username;
    \n            proxy_set_header X-Auth-Request-Preferred-Username $username;\n
    \           auth_request_set $groups  $upstream_http_x_auth_request_groups;\n
    \           proxy_set_header X-Auth-Request-Groups  $groups;\n\n            auth_request
    /oauth2/auth;\n            proxy_pass http://127.0.0.1:5000/workspaces;\n        }\n\n
    \       location /api/k8s/workspaces/ {\n            # Kube-API\n            auth_request_set
    $email  $upstream_http_x_auth_request_email;\n            auth_request /oauth2/auth;\n\n
    \           rewrite /api/k8s/workspaces/.+?/(.+) /$1 break;\n            proxy_pass
    https://kubernetes.default.svc;\n            proxy_read_timeout 30m;\n            proxy_set_header
    Impersonate-User $email;\n            include /mnt/nginx-generated-config/bearer.conf;\n
    \       }\n\n        location /wss/k8s/workspaces/ {\n            # Kube-API\n
    \           auth_request_set $email  $upstream_http_x_auth_request_email;\n            auth_request
    /oauth2/auth;\n\n            rewrite /wss/k8s/workspaces/.+?/(.+) /$1 break;\n
    \           proxy_pass https://kubernetes.default.svc/;\n            proxy_http_version
    1.1;\n            proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header
    Connection $connection_upgrade;\n            proxy_read_timeout 30m;\n            proxy_set_header
    Impersonate-User $email;\n            include /mnt/nginx-generated-config/websocket.conf;\n
    \       }\n\n        location /api/k8s/ {\n            # Kube-API\n            auth_request_set
    $email  $upstream_http_x_auth_request_email;\n            auth_request /oauth2/auth;\n\n
    \           proxy_pass https://kubernetes.default.svc/;\n            proxy_read_timeout
    30m;\n            proxy_set_header Impersonate-User $email;\n            include
    /mnt/nginx-generated-config/bearer.conf;\n        }\n\n        location /wss/k8s/
    {\n            auth_request_set $email  $upstream_http_x_auth_request_email;\n
    \           auth_request /oauth2/auth;\n\n            proxy_http_version 1.1;\n
    \           proxy_set_header Upgrade $http_upgrade;\n            proxy_set_header
    Connection $connection_upgrade;\n            proxy_read_timeout 30m;\n            proxy_set_header
    Impersonate-User $email;\n            include /mnt/nginx-generated-config/websocket.conf;\n
    \       }\n\n        location /api/k8s/plugins/tekton-results/workspaces/ {\n
    \           auth_request_set $email  $upstream_http_x_auth_request_email;\n            auth_request
    /oauth2/auth;\n\n            rewrite /api/k8s/plugins/tekton-results/workspaces/.+?/(.+)
    /$1 break;\n            proxy_pass https://tekton-results-api-service.tekton-results.svc.cluster.local:8080;\n
    \           proxy_read_timeout 30m;\n            proxy_set_header Impersonate-User
    $email;\n            include /mnt/nginx-generated-config/bearer.conf;\n        }\n\n
    \       location /health {\n            # Used for liveness probes\n            return
    200;\n        }\n    }\n}\n"
kind: ConfigMap
metadata:
  name: proxy-bgm476hdch
  namespace: konflux-ui
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: dex-client
  name: dex-client
  namespace: konflux-ui
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Secret
metadata:
  annotations:
    kubernetes.io/service-account.name: proxy
  name: proxy
  namespace: konflux-ui
type: kubernetes.io/service-account-token
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: dex-cert
  name: dex
  namespace: konflux-ui
spec:
  ports:
  - name: dex
    port: 9443
    protocol: TCP
    targetPort: 9443
  selector:
    app: dex
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.openshift.io/serving-cert-secret-name: serving-cert
  labels:
    app: proxy
  name: proxy
  namespace: konflux-ui
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: web
    port: 8888
    protocol: TCP
    targetPort: web
  - name: web-tls
    port: 9443
    protocol: TCP
    targetPort: web-tls
  selector:
    app: proxy
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    ignore-check.kube-linter.io/no-anti-affinity: Using topologySpreadConstraints
  labels:
    app: dex
  name: dex
  namespace: konflux-ui
spec:
  replicas: 3
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
    spec:
      containers:
      - command:
        - /usr/local/bin/dex
        - serve
        - /etc/dex/cfg/config.yaml
        env:
        - name: OPENSHIFT_OAUTH_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: token
              name: dex-client
        - name: OAUTH2_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oauth2-proxy-client-secret
        image: ghcr.io/dexidp/dex:v2.32.0
        name: dex
        ports:
        - containerPort: 9443
          name: https
        - containerPort: 5558
          name: telemetry
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: telemetry
        resources:
          limits:
            cpu: 100m
            memory: 256Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/dex/cfg
          name: dex
        - mountPath: /etc/dex/tls
          name: tls
      serviceAccountName: dex
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: dex
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: dex-config.yaml
            path: config.yaml
          name: dex-22h6m5fdfm
        name: dex
      - name: tls
        secret:
          secretName: dex-cert
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    ignore-check.kube-linter.io/no-anti-affinity: Using topologySpreadConstraints
  labels:
    app: proxy
  name: proxy
  namespace: konflux-ui
spec:
  minReadySeconds: 30
  replicas: 3
  selector:
    matchLabels:
      app: proxy
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: proxy
    spec:
      containers:
      - command:
        - /usr/local/openresty/bin/openresty
        - -g
        - daemon off;
        - -c
        - /etc/nginx/nginx.conf
        image: openresty/openresty:1.25.3.1-0-jammy
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: nginx-120
        ports:
        - containerPort: 8080
          name: web
          protocol: TCP
        - containerPort: 9443
          name: web-tls
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: 9443
            scheme: HTTPS
          initialDelaySeconds: 30
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 30m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /etc/nginx/nginx.conf
          name: proxy
          readOnly: true
          subPath: nginx.conf
        - mountPath: /var/log/nginx
          name: logs
        - mountPath: /var/lib/nginx/tmp
          name: nginx-tmp
        - mountPath: /run
          name: run
        - mountPath: /mnt
          name: serving-cert
        - mountPath: /mnt/nginx-generated-config
          name: nginx-generated-config
        - mountPath: /var/run/openresty
          name: openresty
        - mountPath: /opt/app-root/src/static-content
          name: static-content
      - image: quay.io/konflux-ci/workspace-manager@sha256:0b32c063d9fbce1af4f851d7cf1f8bc0ad1eda06dafaa4ad2bd4a0d5fbba62c7
        name: workspace-manager
        ports:
        - containerPort: 5000
          name: web
          protocol: TCP
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 30m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      - args:
        - --provider
        - oidc
        - --provider-display-name
        - Dex
        - --client-id
        - oauth2-proxy
        - --http-address
        - 127.0.0.1:6000
        - --redirect-url
        - /oauth2/callback
        - --reverse-proxy
        - "true"
        - --oidc-issuer-url
        - https://konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com/idp
        - "true"
        - --cookie-name
        - __Host-konflux-ci-cookie
        - --email-domain
        - '*'
        - --insecure-oidc-allow-unverified-email
        - "true"
        - --set-xauthrequest
        - "true"
        - --whitelist-domain
        - localhost:9443
        - --whitelist-domain
        - konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com
        env:
        - name: OAUTH2_PROXY_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: client-secret
              name: oauth2-proxy-client-secret
        - name: OAUTH2_PROXY_COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              key: cookie-secret
              name: oauth2-proxy-cookie-secret
        image: quay.io/oauth2-proxy/oauth2-proxy@sha256:3da33b9670c67bd782277f99acadf7026f75b9507bfba2088eb2d497266ef7fc
        name: oauth2-proxy
        ports:
        - containerPort: 6000
          name: web
          protocol: TCP
        resources:
          limits:
            cpu: 300m
            memory: 256Mi
          requests:
            cpu: 30m
            memory: 128Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
      initContainers:
      - command:
        - cp
        - -R
        - /opt/app-root/src/.
        - /mnt/static-content/
        image: quay.io/konflux-ci/konflux-ui@sha256:4d638ff6ed4874de0406b200e671ebac72b3f03c4d46b92f02bf62809c1cbed3
        name: copy-static-content
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /mnt/static-content
          name: static-content
      - command:
        - sh
        - -c
        - |
          set -e

          token=$(cat /mnt/api-token/token)
          # for websocket connections padding should be removed from a base64 encoded token
          token64=$(base64 -w 0 /mnt/api-token/token | sed -E  s,=+$,,g)

          echo "proxy_set_header Authorization \"Bearer $token\";" > /mnt/nginx-generated-config/bearer.conf

          echo "proxy_set_header Sec-WebSocket-Protocol \"base64url.bearer.authorization.k8s.io.${token64}, base64.binary.k8s.io\";" > /mnt/nginx-generated-config/websocket.conf
        image: registry.access.redhat.com/ubi9/ubi@sha256:66233eebd72bb5baa25190d4f55e1dc3fff3a9b77186c1f91a0abdb274452072
        name: add-sva-token-to-nginx-config
        resources:
          limits:
            cpu: 50m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          readOnlyRootFilesystem: true
          runAsNonRoot: true
        volumeMounts:
        - mountPath: /mnt/nginx-generated-config
          name: nginx-generated-config
        - mountPath: /mnt/api-token
          name: api-token
      serviceAccountName: proxy
      topologySpreadConstraints:
      - labelSelector:
          matchLabels:
            app: proxy
        maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: ScheduleAnyway
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: nginx.conf
            path: nginx.conf
          name: proxy-bgm476hdch
        name: proxy
      - emptyDir: {}
        name: logs
      - emptyDir: {}
        name: nginx-tmp
      - emptyDir: {}
        name: run
      - name: serving-cert
        secret:
          secretName: serving-cert
      - emptyDir: {}
        name: nginx-generated-config
      - name: api-token
        secret:
          secretName: proxy
      - emptyDir: {}
        name: openresty
      - emptyDir: {}
        name: static-content
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  annotations:
    haproxy.router.openshift.io/set-forwarded-headers: if-none
  name: konflux
  namespace: konflux-ui
spec:
  host: konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com
  path: /
  port:
    targetPort: web-tls
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: reencrypt
  to:
    kind: Service
    name: proxy
    weight: 100
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: konflux-idp
  namespace: konflux-ui
spec:
  host: konflux-ui.apps.stone-stg-rh01.l2vh.p1.openshiftapps.com
  path: /idp
  port:
    targetPort: dex
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: reencrypt
  to:
    kind: Service
    name: dex
    weight: 100
